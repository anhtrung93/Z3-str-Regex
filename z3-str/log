Input file: /tmp/z3_str_convert/star-006


Input loaded:
-----------------------------------------------
(= (Star __regex__x61_x62_x63_x7c_x64_x62_x63_x61_x62_x63 n)
   (Concat x __cOnStStR__x62_x63_x61_x62_x63))
-----------------------------------------------

>> regex_parse(): currentAst = 353 "dbcabc"

>> regex_parse(): currentAst = 353 "abc"

>> regex_parse(): 385
_t_str0
 and assert: (or (= _t_str0 dbcabc) (= _t_str0 abc))


===================
** cb_reduce_app(): Star( abc|dbcabc, n )  =>  (Star abc|dbcabc n)
===================
>> make_concat: (Concat x bcabc)



***********************************************
*               Starting Search               *
-----------------------------------------------
(and (= (+ (Length (Concat x bcabc)) (* (- 1) (Length x))) 5)
     (>= (Length _t_str0) 0)
     (= (Star abc|dbcabc n) (Concat x bcabc)))
***********************************************
>> Input Var Set: x, 


===============================================
** cb_new_eq():    (Concat x bcabc) = (Star abc|dbcabc n)
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat x bcabc) (Star abc|dbcabc n)) @ 3482


===============================================
** simplifyStarEqConcat():
   starAst = (Star abc|dbcabc n)
   concatAst = (Concat x bcabc)
===============================================
[simplifyStarEqConcat] starAst = (Star abc|dbcabc n)
                   new_concat = (Concat x bcabc) @ 3075
>> regex_parse(): currentAst = 353 "dbcabc"

>> regex_parse(): currentAst = 353 "abc"

>> regex_parse(): 385
_t_str1
 and assert: (or (= _t_str1 dbcabc) (= _t_str1 abc))

>> make_concat: (Concat (Star abc|dbcabc (+ n (- 1))) _t_str1)

---------------------
Axiom Add(@3168, Level 0):
(=> (= (Star abc|dbcabc n) (Concat x bcabc))
    (and (= (Concat x bcabc) (Concat (Star abc|dbcabc (+ n (- 1))) _t_str1))
         (and (or (= _t_str1 dbcabc) (= _t_str1 abc)) (>= n 1))))
---------------------



===============================================
** cb_new_eq():    (Concat x bcabc) = (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str1)
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat x bcabc) (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str1)) @ 3482


===============================================
** simplifyConcatEq():
   nn1 = (Concat x bcabc)
   nn2 = (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str1)
===============================================
[simplifyConcatEq] new_nn1 = (Concat x bcabc)
                   new_nn2 = (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str1) @ 2174

#############################
#  SimplifyConcatEq Type 2  #
#############################
>> make_concat: (Concat _t_str2 bcabc)

>> make_concat: (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str2)

>> Length added for: (= x (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str2)) @ 2591

>> Length added for: (= _t_str1 (Concat _t_str2 bcabc)) @ 2592

>> Length added for: (= _t_str1 bcabc) @ 2623

>> Length added for: (= (Star abc|dbcabc (+ (- 1) n)) x) @ 2624

>> make_concat: (Concat x b)

>> Length added for: (= _t_str1 cabc) @ 2623

>> Length added for: (= (Star abc|dbcabc (+ (- 1) n)) (Concat x b)) @ 2624

>> make_concat: (Concat x bc)

>> Length added for: (= _t_str1 abc) @ 2623

>> Length added for: (= (Star abc|dbcabc (+ (- 1) n)) (Concat x bc)) @ 2624

>> make_concat: (Concat x bca)

>> Length added for: (= _t_str1 bc) @ 2623

>> Length added for: (= (Star abc|dbcabc (+ (- 1) n)) (Concat x bca)) @ 2624

>> make_concat: (Concat x bcab)

>> Length added for: (= _t_str1 c) @ 2623

>> Length added for: (= (Star abc|dbcabc (+ (- 1) n)) (Concat x bcab)) @ 2624

>> Length added for: (= (Star abc|dbcabc (+ (- 1) n)) (Concat x bcabc)) @ 2624

---------------------
Axiom Add(@2634, Level 0):
(=> (= (Concat x bcabc) (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str1))
    (and (or (= _t_xor_0 0)
             (= _t_xor_0 1)
             (= _t_xor_0 2)
             (= _t_xor_0 3)
             (= _t_xor_0 4)
             (= _t_xor_0 5)
             (= _t_xor_0 6))
         (= (= _t_xor_0 0) (= x (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str2)))
         (= (= _t_xor_0 0) (= _t_str1 (Concat _t_str2 bcabc)))
         (= (= _t_xor_0 0)
            (> (Length x) (Length (Star abc|dbcabc (+ (- 1) n)))))
         (= (= _t_xor_0 1) (= (Star abc|dbcabc (+ (- 1) n)) x))
         (= (= _t_xor_0 1) (= _t_str1 bcabc))
         (= (= _t_xor_0 2) (= (Star abc|dbcabc (+ (- 1) n)) (Concat x b)))
         (= (= _t_xor_0 2) (= _t_str1 cabc))
         (= (= _t_xor_0 3) (= (Star abc|dbcabc (+ (- 1) n)) (Concat x bc)))
         (= (= _t_xor_0 3) (= _t_str1 abc))
         (= (= _t_xor_0 4) (= (Star abc|dbcabc (+ (- 1) n)) (Concat x bca)))
         (= (= _t_xor_0 4) (= _t_str1 bc))
         (= (= _t_xor_0 5) (= (Star abc|dbcabc (+ (- 1) n)) (Concat x bcab)))
         (= (= _t_xor_0 5) (= _t_str1 c))
         (= (= _t_xor_0 6) (= (Star abc|dbcabc (+ (- 1) n)) (Concat x bcabc)))
         (= (= _t_xor_0 6) (= _t_str1 ""))))
---------------------


===============================================
** simplifyStarEqConcat():
   starAst = (Star abc|dbcabc n)
   concatAst = (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str1)
===============================================
[simplifyStarEqConcat] starAst = (Star abc|dbcabc n)
                   new_concat = (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str1) @ 3075

*******************************************
[PUSH]: Level = 1
*******************************************

*******************************************
[PUSH]: Level = 2
*******************************************


===============================================
** cb_new_eq():    "dbcabc" = _t_str1
===============================================
>> New_eq Check: PASS

>> Length added for: (= _t_str1 dbcabc) @ 3482

>> [simplifyConcatStr 2 @ 1260] (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str1)


*******************************************
[POP]: Level = 1
*******************************************

*******************************************
[POP]: Level = 0
*******************************************

*******************************************
[PUSH]: Level = 1
*******************************************


===============================================
** cb_new_eq():    "abc" = _t_str1
===============================================
>> New_eq Check: PASS

>> Length added for: (= _t_str1 abc) @ 3482

>> [simplifyConcatStr 2 @ 1260] (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str1)



===============================================
** cb_new_eq():    (Concat x bc) = (Star abc|dbcabc (+ (- 1) n))
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat x bc) (Star abc|dbcabc (+ (- 1) n))) @ 3482


===============================================
** simplifyStarEqConcat():
   starAst = (Star abc|dbcabc (+ (- 1) n))
   concatAst = (Concat x bc)
===============================================
[simplifyStarEqConcat] starAst = (Star abc|dbcabc (+ (- 1) n))
                   new_concat = (Concat x bc) @ 3075
>> regex_parse(): currentAst = 353 "dbcabc"

>> regex_parse(): currentAst = 353 "abc"

>> regex_parse(): 385
_t_str3
 and assert: (or (= _t_str3 dbcabc) (= _t_str3 abc))

>> make_concat: (Concat (Star abc|dbcabc (+ (+ (- 1) n) (- 1))) _t_str3)

---------------------
Axiom Add(@3168, Level 1):
(=> (= (Star abc|dbcabc (+ (- 1) n)) (Concat x bc))
    (and (= (Concat x bc)
            (Concat (Star abc|dbcabc (+ (+ (- 1) n) (- 1))) _t_str3))
         (and (or (= _t_str3 dbcabc) (= _t_str3 abc)) (>= (+ (- 1) n) 1))))
---------------------



===============================================
** cb_new_eq():    (Concat x bc) = (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str3)
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat x bc) (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str3)) @ 3482


===============================================
** simplifyConcatEq():
   nn1 = (Concat x bc)
   nn2 = (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str3)
===============================================
[simplifyConcatEq] new_nn1 = (Concat x bc)
                   new_nn2 = (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str3) @ 2174

#############################
#  SimplifyConcatEq Type 2  #
#############################
>> make_concat: (Concat _t_str4 bc)

>> make_concat: (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str4)

>> Length added for: (= x (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str4)) @ 2591

>> Length added for: (= _t_str3 (Concat _t_str4 bc)) @ 2592

>> Length added for: (= _t_str3 bc) @ 2623

>> Length added for: (= (Star abc|dbcabc (+ (- 2) n)) x) @ 2624

>> Length added for: (= _t_str3 c) @ 2623

>> Length added for: (= (Star abc|dbcabc (+ (- 2) n)) (Concat x b)) @ 2624

>> Length added for: (= (Star abc|dbcabc (+ (- 2) n)) (Concat x bc)) @ 2624

---------------------
Axiom Add(@2634, Level 1):
(=> (= (Concat x bc) (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str3))
    (and (or (= _t_xor_1 0) (= _t_xor_1 1) (= _t_xor_1 2) (= _t_xor_1 3))
         (= (= _t_xor_1 0) (= x (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str4)))
         (= (= _t_xor_1 0) (= _t_str3 (Concat _t_str4 bc)))
         (= (= _t_xor_1 0)
            (> (Length x) (Length (Star abc|dbcabc (+ (- 2) n)))))
         (= (= _t_xor_1 1) (= (Star abc|dbcabc (+ (- 2) n)) x))
         (= (= _t_xor_1 1) (= _t_str3 bc))
         (= (= _t_xor_1 2) (= (Star abc|dbcabc (+ (- 2) n)) (Concat x b)))
         (= (= _t_xor_1 2) (= _t_str3 c))
         (= (= _t_xor_1 3) (= (Star abc|dbcabc (+ (- 2) n)) (Concat x bc)))
         (= (= _t_xor_1 3) (= _t_str3 ""))))
---------------------


===============================================
** simplifyStarEqConcat():
   starAst = (Star abc|dbcabc (+ (- 1) n))
   concatAst = (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str3)
===============================================
[simplifyStarEqConcat] starAst = (Star abc|dbcabc (+ (- 1) n))
                   new_concat = (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str3) @ 3075

*******************************************
[PUSH]: Level = 2
*******************************************

*******************************************
[PUSH]: Level = 3
*******************************************

*******************************************
[PUSH]: Level = 4
*******************************************

*******************************************
[PUSH]: Level = 5
*******************************************

*******************************************
[PUSH]: Level = 6
*******************************************

*******************************************
[PUSH]: Level = 7
*******************************************


===============================================
** cb_new_eq():    "abc" = _t_str3
===============================================
>> New_eq Check: PASS

>> Length added for: (= _t_str3 abc) @ 3482

>> [simplifyConcatStr 2 @ 1260] (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str3)


*******************************************
[POP]: Level = 6
*******************************************

*******************************************
[PUSH]: Level = 7
*******************************************

*******************************************
[POP]: Level = 6
*******************************************


===============================================
** cb_new_eq():    "dbcabc" = _t_str3
===============================================
>> New_eq Check: PASS

>> Length added for: (= _t_str3 dbcabc) @ 3482

>> [simplifyConcatStr 2 @ 1260] (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str3)


*******************************************
[POP]: Level = 5
*******************************************

*******************************************
[POP]: Level = 4
*******************************************

*******************************************
[POP]: Level = 3
*******************************************

*******************************************
[POP]: Level = 2
*******************************************

*******************************************
[POP]: Level = 1
*******************************************


===============================================
** cb_new_eq():    (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str4) = x
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str4) x) @ 3482



===============================================
** cb_new_eq():    (Concat _t_str4 bc) = _t_str3
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat _t_str4 bc) _t_str3) @ 3482


*******************************************
[PUSH]: Level = 2
*******************************************


===============================================
** cb_new_eq():    "dbcabc" = _t_str3
===============================================
>> New_eq Check: PASS

>> Length added for: (= _t_str3 dbcabc) @ 3482

** solve_concat_eq_str: (Concat _t_str4 bc) = "dbcabc"
>> Length added for: (= _t_str4 dbca) @ 1737

---------------------
Axiom Add(@1738, Level 2):
(=> (= (Concat _t_str4 bc) dbcabc) (= _t_str4 dbca))
---------------------

>> [simplifyConcatStr 2 @ 1260] (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str3)



===============================================
** cb_new_eq():    "dbca" = _t_str4
===============================================
>> New_eq Check: PASS

>> Length added for: (= _t_str4 dbca) @ 3482

>> [simplifyConcatStr 1 @ 1225] (Concat _t_str4 bc)

>> [simplifyConcatStr 2 @ 1260] (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str4)


*******************************************
[PUSH]: Level = 3
*******************************************

*******************************************
[PUSH]: Level = 4
*******************************************

*******************************************
[PUSH]: Level = 5
*******************************************



vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
                cb_final_check @ Level [5] 
=============================================================

******************************************
       Dependence Analysis
------------------------------------------
(0) alias: variables

(1) var = constStr:
  _t_str1 = "abc"
  _t_str3 = "dbcabc"
  _t_str4 = "dbca"

(2) var = concat:
  x = { (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str4), }
  _t_str3 = { (Concat _t_str4 bc), }

(3) concat = constStr:
  (Concat _t_str4 bc) = "dbcabc"

(4) eq concats:
(Concat x bcabc)  >> (Concat x bcabc) , (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str1) , 

(Concat x bc)  >> (Concat x bc) , (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str3) , 

(5) star = constStr:

(6) eq stars:
(7) star = concat:
(Star abc|dbcabc n)  >> (Concat x bcabc) , (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str1) , 
(Star abc|dbcabc (+ (- 1) n))  >> (Concat x bc) , (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str3) , 


-- Dependence Map -----------------
x	-->	_t_str4(2), 
_t_str1	-->	"abc"(1), "bcabc"(5), 
_t_str3	-->	"dbcabc"(1), "bc"(5), _t_str4(2), 
_t_str4	-->	"dbcabc"(3), "dbca"(1), 
-----------------------------------

-- L/R Most Var in eq concat ------
  >> [L] {x, (Star abc|dbcabc (+ (- 1) n)), (Star abc|dbcabc (+ (- 2) n)), }
-----------------------------------

-- L/R constraints ----------------
x	<->	{(Star abc|dbcabc (+ (- 1) n)), (Star abc|dbcabc (+ (- 2) n)), }
(Star abc|dbcabc (+ (- 1) n))	<->	{x, (Star abc|dbcabc (+ (- 2) n)), }
(Star abc|dbcabc (+ (- 2) n))	<->	{x, (Star abc|dbcabc (+ (- 1) n)), }
-----------------------------------

* Free Variables:
----------------------------------

----------------------------------

###########################################################


*****************************
SAT
-----------------------------
_t_xor_0 -> 3
n -> 2
_t_str4 -> dbca
_t_xor_1 -> 0
_t_str0 -> String!val!1
_t_str1 -> abc
_t_str2 -> String!val!2
_t_str3 -> dbcabc
x -> String!val!10
*****************************

** Reset():

** Delete()
