Input file: /tmp/z3_str_convert/star-006


Input loaded:
-----------------------------------------------
(= (Concat y (Star __regex__x61_x62_x63_x7c_x64_x62_x63_x61_x62_x63 n))
   (Concat x __cOnStStR__x62_x63_x61_x62_x63))
-----------------------------------------------


===================
** cb_reduce_app(): Star( abc|dbcabc, n )  =>  (Star abc|dbcabc n)
===================
>> make_concat: (Concat y (Star abc|dbcabc n))

>> make_concat: (Concat x bcabc)



***********************************************
*               Starting Search               *
-----------------------------------------------
(and (= (+ (Length (Concat y (Star abc|dbcabc n)))
           (* (- 1) (Length y))
           (* (- 1) (Length (Star abc|dbcabc n))))
        0)
     (= (+ (Length (Concat x bcabc)) (* (- 1) (Length x))) 5)
     (= (Concat y (Star abc|dbcabc n)) (Concat x bcabc)))
***********************************************
>> Input Var Set: y, x, 


===============================================
** cb_new_eq():    (Concat x bcabc) = (Concat y (Star abc|dbcabc n))
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat x bcabc) (Concat y (Star abc|dbcabc n))) @ 3497


===============================================
** simplifyConcatEq():
   nn1 = (Concat x bcabc)
   nn2 = (Concat y (Star abc|dbcabc n))
===============================================
[simplifyConcatEq] new_nn1 = (Concat x bcabc)
                   new_nn2 = (Concat y (Star abc|dbcabc n)) @ 2171

#############################
#  SimplifyConcatEq Type 2  #
#############################
>> make_concat: (Concat _t_str0 bcabc)

>> make_concat: (Concat y _t_str0)

>> Length added for: (= x (Concat y _t_str0)) @ 2588

>> Length added for: (= (Star abc|dbcabc n) (Concat _t_str0 bcabc)) @ 2589

>> Length added for: (= (Star abc|dbcabc n) bcabc) @ 2620

>> Length added for: (= y x) @ 2621

>> make_concat: (Concat x b)

>> Length added for: (= (Star abc|dbcabc n) cabc) @ 2620

>> Length added for: (= y (Concat x b)) @ 2621

>> make_concat: (Concat x bc)

>> Length added for: (= (Star abc|dbcabc n) abc) @ 2620

>> Length added for: (= y (Concat x bc)) @ 2621

>> make_concat: (Concat x bca)

>> Length added for: (= (Star abc|dbcabc n) bc) @ 2620

>> Length added for: (= y (Concat x bca)) @ 2621

>> make_concat: (Concat x bcab)

>> Length added for: (= (Star abc|dbcabc n) c) @ 2620

>> Length added for: (= y (Concat x bcab)) @ 2621

>> Length added for: (= (Star abc|dbcabc n) "") @ 2620

>> Length added for: (= y (Concat x bcabc)) @ 2621

---------------------
Axiom Add(@2631, Level 0):
(=> (= (Concat x bcabc) (Concat y (Star abc|dbcabc n)))
    (and (or (= _t_xor_0 0)
             (= _t_xor_0 1)
             (= _t_xor_0 2)
             (= _t_xor_0 3)
             (= _t_xor_0 4)
             (= _t_xor_0 5)
             (= _t_xor_0 6))
         (= (= _t_xor_0 0) (= x (Concat y _t_str0)))
         (= (= _t_xor_0 0) (= (Star abc|dbcabc n) (Concat _t_str0 bcabc)))
         (= (= _t_xor_0 0) (> (Length x) (Length y)))
         (= (= _t_xor_0 1) (= y x))
         (= (= _t_xor_0 1) (= (Star abc|dbcabc n) bcabc))
         (= (= _t_xor_0 2) (= y (Concat x b)))
         (= (= _t_xor_0 2) (= (Star abc|dbcabc n) cabc))
         (= (= _t_xor_0 3) (= y (Concat x bc)))
         (= (= _t_xor_0 3) (= (Star abc|dbcabc n) abc))
         (= (= _t_xor_0 4) (= y (Concat x bca)))
         (= (= _t_xor_0 4) (= (Star abc|dbcabc n) bc))
         (= (= _t_xor_0 5) (= y (Concat x bcab)))
         (= (= _t_xor_0 5) (= (Star abc|dbcabc n) c))
         (= (= _t_xor_0 6) (= y (Concat x bcabc)))
         (= (= _t_xor_0 6) (= (Star abc|dbcabc n) ""))))
---------------------


*******************************************
[PUSH]: Level = 1
*******************************************


===============================================
** cb_new_eq():    (Concat y _t_str0) = x
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat y _t_str0) x) @ 3497



===============================================
** cb_new_eq():    (Concat _t_str0 bcabc) = (Star abc|dbcabc n)
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat _t_str0 bcabc) (Star abc|dbcabc n)) @ 3497


===============================================
** simplifyStarEqConcat():
   starAst = (Star abc|dbcabc n)
   concatAst = (Concat _t_str0 bcabc)
===============================================
[simplifyStarEqConcat] starAst = (Star abc|dbcabc n)
                   new_concat = (Concat _t_str0 bcabc) @ 3072
>> regex_parse(): currentAst = 353 "dbcabc"

>> regex_parse(): currentAst = 353 "abc"

>> regex_parse(): 385
_t_str1
 and assert: (or (= _t_str1 abc) (= _t_str1 dbcabc))

>> make_concat: (Concat (Star abc|dbcabc (+ n (- 1))) _t_str1)

---------------------
Axiom Add(@3170, Level 1):
(=> (= (Star abc|dbcabc n) (Concat _t_str0 bcabc))
    (and (= (Concat _t_str0 bcabc)
            (Concat (Star abc|dbcabc (+ n (- 1))) _t_str1))
         (and (or (= _t_str1 abc) (= _t_str1 dbcabc)) (>= n 1))))
---------------------


*******************************************
[POP]: Level = 0
*******************************************

*******************************************
[PUSH]: Level = 1
*******************************************

*******************************************
[PUSH]: Level = 2
*******************************************

*******************************************
[PUSH]: Level = 3
*******************************************

*******************************************
[PUSH]: Level = 4
*******************************************


===============================================
** cb_new_eq():    (Concat x bcabc) = y
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat x bcabc) y) @ 3497



===============================================
** cb_new_eq():    "" = (Star abc|dbcabc n)
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Star abc|dbcabc n) "") @ 3497

** solve_star_eq_str: (Star abc|dbcabc n) = ""
---------------------
Axiom Add(@1635, Level 4):
(not (= (Star abc|dbcabc n) ""))
---------------------

>> [simplifyConcatStr 2 @ 1270] (Concat y (Star abc|dbcabc n))


*******************************************
[POP]: Level = 3
*******************************************

*******************************************
[POP]: Level = 2
*******************************************

*******************************************
[POP]: Level = 1
*******************************************

*******************************************
[POP]: Level = 0
*******************************************

*******************************************
[PUSH]: Level = 1
*******************************************

*******************************************
[PUSH]: Level = 2
*******************************************

*******************************************
[PUSH]: Level = 3
*******************************************


===============================================
** cb_new_eq():    (Concat x bcab) = y
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat x bcab) y) @ 3497



===============================================
** cb_new_eq():    "c" = (Star abc|dbcabc n)
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Star abc|dbcabc n) c) @ 3497

** solve_star_eq_str: (Star abc|dbcabc n) = "c"
---------------------
Axiom Add(@1635, Level 3):
(not (= (Star abc|dbcabc n) c))
---------------------

>> [simplifyConcatStr 2 @ 1270] (Concat y (Star abc|dbcabc n))


*******************************************
[POP]: Level = 2
*******************************************

*******************************************
[POP]: Level = 1
*******************************************

*******************************************
[POP]: Level = 0
*******************************************

*******************************************
[PUSH]: Level = 1
*******************************************

*******************************************
[PUSH]: Level = 2
*******************************************


===============================================
** cb_new_eq():    (Concat x bca) = y
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat x bca) y) @ 3497



===============================================
** cb_new_eq():    "bc" = (Star abc|dbcabc n)
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Star abc|dbcabc n) bc) @ 3497

** solve_star_eq_str: (Star abc|dbcabc n) = "bc"
---------------------
Axiom Add(@1635, Level 2):
(not (= (Star abc|dbcabc n) bc))
---------------------

>> [simplifyConcatStr 2 @ 1270] (Concat y (Star abc|dbcabc n))


*******************************************
[POP]: Level = 1
*******************************************

*******************************************
[POP]: Level = 0
*******************************************

*******************************************
[PUSH]: Level = 1
*******************************************

*******************************************
[PUSH]: Level = 2
*******************************************

*******************************************
[POP]: Level = 1
*******************************************

*******************************************
[PUSH]: Level = 2
*******************************************

*******************************************
[PUSH]: Level = 3
*******************************************


===============================================
** cb_new_eq():    x = y
===============================================
>> New_eq Check: PASS

>> Length added for: (= x y) @ 3497



===============================================
** cb_new_eq():    "bcabc" = (Star abc|dbcabc n)
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Star abc|dbcabc n) bcabc) @ 3497

** solve_star_eq_str: (Star abc|dbcabc n) = "bcabc"
---------------------
Axiom Add(@1635, Level 3):
(not (= (Star abc|dbcabc n) bcabc))
---------------------

>> [simplifyConcatStr 2 @ 1270] (Concat y (Star abc|dbcabc n))


*******************************************
[POP]: Level = 2
*******************************************

*******************************************
[POP]: Level = 1
*******************************************

*******************************************
[POP]: Level = 0
*******************************************

*******************************************
[PUSH]: Level = 1
*******************************************

*******************************************
[PUSH]: Level = 2
*******************************************


===============================================
** cb_new_eq():    (Concat x b) = y
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat x b) y) @ 3497



===============================================
** cb_new_eq():    "cabc" = (Star abc|dbcabc n)
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Star abc|dbcabc n) cabc) @ 3497

** solve_star_eq_str: (Star abc|dbcabc n) = "cabc"
---------------------
Axiom Add(@1635, Level 2):
(not (= (Star abc|dbcabc n) cabc))
---------------------

>> [simplifyConcatStr 2 @ 1270] (Concat y (Star abc|dbcabc n))


*******************************************
[POP]: Level = 1
*******************************************

*******************************************
[POP]: Level = 0
*******************************************

*******************************************
[PUSH]: Level = 1
*******************************************


===============================================
** cb_new_eq():    (Concat y _t_str0) = x
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat y _t_str0) x) @ 3497



===============================================
** cb_new_eq():    (Concat _t_str0 bcabc) = (Star abc|dbcabc n)
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat _t_str0 bcabc) (Star abc|dbcabc n)) @ 3497


===============================================
** simplifyStarEqConcat():
   starAst = (Star abc|dbcabc n)
   concatAst = (Concat _t_str0 bcabc)
===============================================
[simplifyStarEqConcat] starAst = (Star abc|dbcabc n)
                   new_concat = (Concat _t_str0 bcabc) @ 3072
>> regex_parse(): currentAst = 353 "dbcabc"

>> regex_parse(): currentAst = 353 "abc"

>> regex_parse(): 385
_t_str2
 and assert: (or (= _t_str2 abc) (= _t_str2 dbcabc))

>> make_concat: (Concat (Star abc|dbcabc (+ n (- 1))) _t_str2)

---------------------
Axiom Add(@3170, Level 1):
(=> (= (Star abc|dbcabc n) (Concat _t_str0 bcabc))
    (and (= (Concat _t_str0 bcabc)
            (Concat (Star abc|dbcabc (+ n (- 1))) _t_str2))
         (and (or (= _t_str2 abc) (= _t_str2 dbcabc)) (>= n 1))))
---------------------



===============================================
** cb_new_eq():    (Concat _t_str0 bcabc) = (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str2)
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat _t_str0 bcabc) (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str2)) @ 3497


===============================================
** simplifyConcatEq():
   nn1 = (Concat _t_str0 bcabc)
   nn2 = (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str2)
===============================================
[simplifyConcatEq] new_nn1 = (Concat _t_str0 bcabc)
                   new_nn2 = (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str2) @ 2171

#############################
#  SimplifyConcatEq Type 2  #
#############################
>> make_concat: (Concat _t_str3 bcabc)

>> make_concat: (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str3)

>> Length added for: (= _t_str0 (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str3)) @ 2588

>> Length added for: (= _t_str2 (Concat _t_str3 bcabc)) @ 2589

>> Length added for: (= _t_str2 bcabc) @ 2620

>> Length added for: (= (Star abc|dbcabc (+ (- 1) n)) _t_str0) @ 2621

>> make_concat: (Concat _t_str0 b)

>> Length added for: (= _t_str2 cabc) @ 2620

>> Length added for: (= (Star abc|dbcabc (+ (- 1) n)) (Concat _t_str0 b)) @ 2621

>> make_concat: (Concat _t_str0 bc)

>> Length added for: (= _t_str2 abc) @ 2620

>> Length added for: (= (Star abc|dbcabc (+ (- 1) n)) (Concat _t_str0 bc)) @ 2621

>> make_concat: (Concat _t_str0 bca)

>> Length added for: (= _t_str2 bc) @ 2620

>> Length added for: (= (Star abc|dbcabc (+ (- 1) n)) (Concat _t_str0 bca)) @ 2621

>> make_concat: (Concat _t_str0 bcab)

>> Length added for: (= _t_str2 c) @ 2620

>> Length added for: (= (Star abc|dbcabc (+ (- 1) n)) (Concat _t_str0 bcab)) @ 2621

>> Length added for: (= (Star abc|dbcabc (+ (- 1) n)) (Concat _t_str0 bcabc)) @ 2621

---------------------
Axiom Add(@2631, Level 1):
(=> (= (Concat _t_str0 bcabc) (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str2))
    (and (or (= _t_xor_1 0)
             (= _t_xor_1 1)
             (= _t_xor_1 2)
             (= _t_xor_1 3)
             (= _t_xor_1 4)
             (= _t_xor_1 5)
             (= _t_xor_1 6))
         (= (= _t_xor_1 0)
            (= _t_str0 (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str3)))
         (= (= _t_xor_1 0) (= _t_str2 (Concat _t_str3 bcabc)))
         (= (= _t_xor_1 0)
            (> (Length _t_str0) (Length (Star abc|dbcabc (+ (- 1) n)))))
         (= (= _t_xor_1 1) (= (Star abc|dbcabc (+ (- 1) n)) _t_str0))
         (= (= _t_xor_1 1) (= _t_str2 bcabc))
         (= (= _t_xor_1 2) (= (Star abc|dbcabc (+ (- 1) n)) (Concat _t_str0 b)))
         (= (= _t_xor_1 2) (= _t_str2 cabc))
         (= (= _t_xor_1 3)
            (= (Star abc|dbcabc (+ (- 1) n)) (Concat _t_str0 bc)))
         (= (= _t_xor_1 3) (= _t_str2 abc))
         (= (= _t_xor_1 4)
            (= (Star abc|dbcabc (+ (- 1) n)) (Concat _t_str0 bca)))
         (= (= _t_xor_1 4) (= _t_str2 bc))
         (= (= _t_xor_1 5)
            (= (Star abc|dbcabc (+ (- 1) n)) (Concat _t_str0 bcab)))
         (= (= _t_xor_1 5) (= _t_str2 c))
         (= (= _t_xor_1 6)
            (= (Star abc|dbcabc (+ (- 1) n)) (Concat _t_str0 bcabc)))
         (= (= _t_xor_1 6) (= _t_str2 ""))))
---------------------


===============================================
** simplifyStarEqConcat():
   starAst = (Star abc|dbcabc n)
   concatAst = (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str2)
===============================================
[simplifyStarEqConcat] starAst = (Star abc|dbcabc n)
                   new_concat = (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str2) @ 3072

*******************************************
[PUSH]: Level = 2
*******************************************

*******************************************
[PUSH]: Level = 3
*******************************************

*******************************************
[PUSH]: Level = 4
*******************************************

*******************************************
[PUSH]: Level = 5
*******************************************

*******************************************
[PUSH]: Level = 6
*******************************************


===============================================
** cb_new_eq():    "dbcabc" = _t_str2
===============================================
>> New_eq Check: PASS

>> Length added for: (= _t_str2 dbcabc) @ 3497

>> [simplifyConcatStr 2 @ 1270] (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str2)


*******************************************
[POP]: Level = 5
*******************************************

*******************************************
[POP]: Level = 4
*******************************************


===============================================
** cb_new_eq():    "abc" = _t_str2
===============================================
>> New_eq Check: PASS

>> Length added for: (= _t_str2 abc) @ 3497

>> [simplifyConcatStr 2 @ 1270] (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str2)



===============================================
** cb_new_eq():    (Concat _t_str0 bc) = (Star abc|dbcabc (+ (- 1) n))
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat _t_str0 bc) (Star abc|dbcabc (+ (- 1) n))) @ 3497


===============================================
** simplifyStarEqConcat():
   starAst = (Star abc|dbcabc (+ (- 1) n))
   concatAst = (Concat _t_str0 bc)
===============================================
[simplifyStarEqConcat] starAst = (Star abc|dbcabc (+ (- 1) n))
                   new_concat = (Concat _t_str0 bc) @ 3072
>> regex_parse(): currentAst = 353 "dbcabc"

>> regex_parse(): currentAst = 353 "abc"

>> regex_parse(): 385
_t_str4
 and assert: (or (= _t_str4 abc) (= _t_str4 dbcabc))

>> make_concat: (Concat (Star abc|dbcabc (+ (+ (- 1) n) (- 1))) _t_str4)

---------------------
Axiom Add(@3170, Level 4):
(=> (= (Star abc|dbcabc (+ (- 1) n)) (Concat _t_str0 bc))
    (and (= (Concat _t_str0 bc)
            (Concat (Star abc|dbcabc (+ (+ (- 1) n) (- 1))) _t_str4))
         (and (or (= _t_str4 abc) (= _t_str4 dbcabc)) (>= (+ (- 1) n) 1))))
---------------------



===============================================
** cb_new_eq():    (Concat _t_str0 bc) = (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str4)
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat _t_str0 bc) (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str4)) @ 3497


===============================================
** simplifyConcatEq():
   nn1 = (Concat _t_str0 bc)
   nn2 = (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str4)
===============================================
[simplifyConcatEq] new_nn1 = (Concat _t_str0 bc)
                   new_nn2 = (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str4) @ 2171

#############################
#  SimplifyConcatEq Type 2  #
#############################
>> make_concat: (Concat _t_str5 bc)

>> make_concat: (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str5)

>> Length added for: (= _t_str0 (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str5)) @ 2588

>> Length added for: (= _t_str4 (Concat _t_str5 bc)) @ 2589

>> Length added for: (= _t_str4 bc) @ 2620

>> Length added for: (= (Star abc|dbcabc (+ (- 2) n)) _t_str0) @ 2621

>> Length added for: (= _t_str4 c) @ 2620

>> Length added for: (= (Star abc|dbcabc (+ (- 2) n)) (Concat _t_str0 b)) @ 2621

>> Length added for: (= (Star abc|dbcabc (+ (- 2) n)) (Concat _t_str0 bc)) @ 2621

---------------------
Axiom Add(@2631, Level 4):
(=> (= (Concat _t_str0 bc) (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str4))
    (and (or (= _t_xor_2 0) (= _t_xor_2 1) (= _t_xor_2 2) (= _t_xor_2 3))
         (= (= _t_xor_2 0)
            (= _t_str0 (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str5)))
         (= (= _t_xor_2 0) (= _t_str4 (Concat _t_str5 bc)))
         (= (= _t_xor_2 0)
            (> (Length _t_str0) (Length (Star abc|dbcabc (+ (- 2) n)))))
         (= (= _t_xor_2 1) (= (Star abc|dbcabc (+ (- 2) n)) _t_str0))
         (= (= _t_xor_2 1) (= _t_str4 bc))
         (= (= _t_xor_2 2) (= (Star abc|dbcabc (+ (- 2) n)) (Concat _t_str0 b)))
         (= (= _t_xor_2 2) (= _t_str4 c))
         (= (= _t_xor_2 3)
            (= (Star abc|dbcabc (+ (- 2) n)) (Concat _t_str0 bc)))
         (= (= _t_xor_2 3) (= _t_str4 ""))))
---------------------


===============================================
** simplifyStarEqConcat():
   starAst = (Star abc|dbcabc (+ (- 1) n))
   concatAst = (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str4)
===============================================
[simplifyStarEqConcat] starAst = (Star abc|dbcabc (+ (- 1) n))
                   new_concat = (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str4) @ 3072

*******************************************
[PUSH]: Level = 5
*******************************************

*******************************************
[PUSH]: Level = 6
*******************************************

*******************************************
[POP]: Level = 5
*******************************************

*******************************************
[POP]: Level = 4
*******************************************

*******************************************
[PUSH]: Level = 5
*******************************************


===============================================
** cb_new_eq():    (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str5) = _t_str0
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str5) _t_str0) @ 3497



===============================================
** cb_new_eq():    (Concat _t_str5 bc) = _t_str4
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat _t_str5 bc) _t_str4) @ 3497


*******************************************
[PUSH]: Level = 6
*******************************************


===============================================
** cb_new_eq():    "dbcabc" = _t_str4
===============================================
>> New_eq Check: PASS

>> Length added for: (= _t_str4 dbcabc) @ 3497

** solve_concat_eq_str: (Concat _t_str5 bc) = "dbcabc"
>> Length added for: (= _t_str5 dbca) @ 1747

---------------------
Axiom Add(@1748, Level 6):
(=> (= (Concat _t_str5 bc) dbcabc) (= _t_str5 dbca))
---------------------

>> [simplifyConcatStr 2 @ 1270] (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str4)



===============================================
** cb_new_eq():    "dbca" = _t_str5
===============================================
>> New_eq Check: PASS

>> Length added for: (= _t_str5 dbca) @ 3497

>> [simplifyConcatStr 1 @ 1235] (Concat _t_str5 bc)

>> [simplifyConcatStr 2 @ 1270] (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str5)




vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
                cb_final_check @ Level [6] 
=============================================================

******************************************
       Dependence Analysis
------------------------------------------
(0) alias: variables

(1) var = constStr:
  _t_str2 = "abc"
  _t_str4 = "dbcabc"
  _t_str5 = "dbca"

(2) var = concat:
  x = { (Concat y _t_str0), }
  _t_str0 = { (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str5), }
  _t_str4 = { (Concat _t_str5 bc), }

(3) concat = constStr:
  (Concat _t_str5 bc) = "dbcabc"

(4) eq concats:
  >> (Concat y (Star abc|dbcabc n)) , (Concat x bcabc) , 
  >> (Concat _t_str0 bcabc) , (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str2) , 
  >> (Concat _t_str0 bc) , (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str4) , 


-- Dependence Map -----------------
x	-->	y(2), _t_str0(2), 
_t_str0	-->	_t_str5(2), 
_t_str2	-->	"bcabc"(5), "abc"(1), 
_t_str4	-->	"bc"(5), "dbcabc"(1), _t_str5(2), 
_t_str5	-->	"dbcabc"(3), "dbca"(1), 
(Star abc|dbcabc n)	-->	"bcabc"(5), 
-----------------------------------

-- L/R Most Var in eq concat ------
  >> [L] {y, x, }
  >> [L] {_t_str0, (Star abc|dbcabc (+ (- 1) n)), (Star abc|dbcabc (+ (- 2) n)), }
-----------------------------------

-- L/R constraints ----------------
y	<->	{x, }
x	<->	{y, }
_t_str0	<->	{(Star abc|dbcabc (+ (- 1) n)), (Star abc|dbcabc (+ (- 2) n)), }
(Star abc|dbcabc (+ (- 1) n))	<->	{_t_str0, (Star abc|dbcabc (+ (- 2) n)), }
(Star abc|dbcabc (+ (- 2) n))	<->	{_t_str0, (Star abc|dbcabc (+ (- 1) n)), }
-----------------------------------


************************************************
Further split needed for: (Star abc|dbcabc n) with "bcabc", [depType = 5]

(Concat y (Star abc|dbcabc n)) = (Concat x bcabc)
************************************************
* toBreak1: (Concat y (Star abc|dbcabc n))
* toBreak2: (Concat x bcabc)

===============================================
** simplifyConcatEq():
   nn1 = (Concat y (Star abc|dbcabc n))
   nn2 = (Concat x bcabc)
===============================================
[simplifyConcatEq] new_nn1 = (Concat y (Star abc|dbcabc n))
                   new_nn2 = (Concat x bcabc) @ 2171

#############################
#  SimplifyConcatEq Type 2  #
#############################
>> Length added for: (= x (Concat y _t_str0)) @ 2588

>> Length added for: (= (Star abc|dbcabc n) (Concat _t_str0 bcabc)) @ 2589

>> Length added for: (= (Star abc|dbcabc n) bcabc) @ 2620

>> Length added for: (= y x) @ 2621

>> Length added for: (= (Star abc|dbcabc n) cabc) @ 2620

>> Length added for: (= y (Concat x b)) @ 2621

>> Length added for: (= (Star abc|dbcabc n) abc) @ 2620

>> Length added for: (= y (Concat x bc)) @ 2621

>> Length added for: (= (Star abc|dbcabc n) bc) @ 2620

>> Length added for: (= y (Concat x bca)) @ 2621

>> Length added for: (= (Star abc|dbcabc n) c) @ 2620

>> Length added for: (= y (Concat x bcab)) @ 2621

>> Length added for: (= (Star abc|dbcabc n) "") @ 2620

>> Length added for: (= y (Concat x bcabc)) @ 2621

---------------------
Axiom Add(@2631, Level 6):
(=> (= (Concat y (Star abc|dbcabc n)) (Concat x bcabc))
    (and (or (= _t_xor_0 0)
             (= _t_xor_0 1)
             (= _t_xor_0 2)
             (= _t_xor_0 3)
             (= _t_xor_0 4)
             (= _t_xor_0 5)
             (= _t_xor_0 6))
         (= (= _t_xor_0 0) (= x (Concat y _t_str0)))
         (= (= _t_xor_0 0) (= (Star abc|dbcabc n) (Concat _t_str0 bcabc)))
         (= (= _t_xor_0 0) (> (Length x) (Length y)))
         (= (= _t_xor_0 1) (= y x))
         (= (= _t_xor_0 1) (= (Star abc|dbcabc n) bcabc))
         (= (= _t_xor_0 2) (= y (Concat x b)))
         (= (= _t_xor_0 2) (= (Star abc|dbcabc n) cabc))
         (= (= _t_xor_0 3) (= y (Concat x bc)))
         (= (= _t_xor_0 3) (= (Star abc|dbcabc n) abc))
         (= (= _t_xor_0 4) (= y (Concat x bca)))
         (= (= _t_xor_0 4) (= (Star abc|dbcabc n) bc))
         (= (= _t_xor_0 5) (= y (Concat x bcab)))
         (= (= _t_xor_0 5) (= (Star abc|dbcabc n) c))
         (= (= _t_xor_0 6) (= y (Concat x bcabc)))
         (= (= _t_xor_0 6) (= (Star abc|dbcabc n) ""))))
---------------------


###########################################################




vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
                cb_final_check @ Level [6] 
=============================================================

******************************************
       Dependence Analysis
------------------------------------------
(0) alias: variables

(1) var = constStr:
  _t_str2 = "abc"
  _t_str4 = "dbcabc"
  _t_str5 = "dbca"

(2) var = concat:
  x = { (Concat y _t_str0), }
  _t_str0 = { (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str5), }
  _t_str4 = { (Concat _t_str5 bc), }

(3) concat = constStr:
  (Concat _t_str5 bc) = "dbcabc"

(4) eq concats:
  >> (Concat y (Star abc|dbcabc n)) , (Concat x bcabc) , 
  >> (Concat _t_str0 bcabc) , (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str2) , 
  >> (Concat _t_str0 bc) , (Concat (Star abc|dbcabc (+ (- 2) n)) _t_str4) , 


-- Dependence Map -----------------
x	-->	y(2), _t_str0(2), 
_t_str0	-->	_t_str5(2), 
_t_str2	-->	"bcabc"(5), "abc"(1), 
_t_str4	-->	"bc"(5), "dbcabc"(1), _t_str5(2), 
_t_str5	-->	"dbcabc"(3), "dbca"(1), 
(Star abc|dbcabc n)	-->	"bcabc"(5), 
-----------------------------------

-- L/R Most Var in eq concat ------
  >> [L] {y, x, }
  >> [L] {_t_str0, (Star abc|dbcabc (+ (- 1) n)), (Star abc|dbcabc (+ (- 2) n)), }
-----------------------------------

-- L/R constraints ----------------
y	<->	{x, }
x	<->	{y, }
_t_str0	<->	{(Star abc|dbcabc (+ (- 1) n)), (Star abc|dbcabc (+ (- 2) n)), }
(Star abc|dbcabc (+ (- 1) n))	<->	{_t_str0, (Star abc|dbcabc (+ (- 2) n)), }
(Star abc|dbcabc (+ (- 2) n))	<->	{_t_str0, (Star abc|dbcabc (+ (- 1) n)), }
-----------------------------------


************************************************
Further split needed for: (Star abc|dbcabc n) with "bcabc", [depType = 5]

(Concat y (Star abc|dbcabc n)) = (Concat x bcabc)
************************************************
* toBreak1: (Concat y (Star abc|dbcabc n))
* toBreak2: (Concat x bcabc)

===============================================
** simplifyConcatEq():
   nn1 = (Concat y (Star abc|dbcabc n))
   nn2 = (Concat x bcabc)
===============================================
[simplifyConcatEq] new_nn1 = (Concat y (Star abc|dbcabc n))
                   new_nn2 = (Concat x bcabc) @ 2171

#############################
#  SimplifyConcatEq Type 2  #
#############################
>> Length added for: (= x (Concat y _t_str0)) @ 2588

>> Length added for: (= (Star abc|dbcabc n) (Concat _t_str0 bcabc)) @ 2589

>> Length added for: (= (Star abc|dbcabc n) bcabc) @ 2620

>> Length added for: (= y x) @ 2621

>> Length added for: (= (Star abc|dbcabc n) cabc) @ 2620

>> Length added for: (= y (Concat x b)) @ 2621

>> Length added for: (= (Star abc|dbcabc n) abc) @ 2620

>> Length added for: (= y (Concat x bc)) @ 2621

>> Length added for: (= (Star abc|dbcabc n) bc) @ 2620

>> Length added for: (= y (Concat x bca)) @ 2621

>> Length added for: (= (Star abc|dbcabc n) c) @ 2620

>> Length added for: (= y (Concat x bcab)) @ 2621

>> Length added for: (= (Star abc|dbcabc n) "") @ 2620

>> Length added for: (= y (Concat x bcabc)) @ 2621

---------------------
Axiom Add(@2631, Level 6):
(=> (= (Concat y (Star abc|dbcabc n)) (Concat x bcabc))
    (and (or (= _t_xor_0 0)
             (= _t_xor_0 1)
             (= _t_xor_0 2)
             (= _t_xor_0 3)
             (= _t_xor_0 4)
             (= _t_xor_0 5)
             (= _t_xor_0 6))
         (= (= _t_xor_0 0) (= x (Concat y _t_str0)))
         (= (= _t_xor_0 0) (= (Star abc|dbcabc n) (Concat _t_str0 bcabc)))
         (= (= _t_xor_0 0) (> (Length x) (Length y)))
         (= (= _t_xor_0 1) (= y x))
         (= (= _t_xor_0 1) (= (Star abc|dbcabc n) bcabc))
         (= (= _t_xor_0 2) (= y (Concat x b)))
         (= (= _t_xor_0 2) (= (Star abc|dbcabc n) cabc))
         (= (= _t_xor_0 3) (= y (Concat x bc)))
         (= (= _t_xor_0 3) (= (Star abc|dbcabc n) abc))
         (= (= _t_xor_0 4) (= y (Concat x bca)))
         (= (= _t_xor_0 4) (= (Star abc|dbcabc n) bc))
         (= (= _t_xor_0 5) (= y (Concat x bcab)))
         (= (= _t_xor_0 5) (= (Star abc|dbcabc n) c))
         (= (= _t_xor_0 6) (= y (Concat x bcabc)))
         (= (= _t_xor_0 6) (= (Star abc|dbcabc n) ""))))
---------------------


###########################################################


*****************************
SAT
-----------------------------
y -> String!val!0
_t_xor_0 -> 0
n -> 2
_t_str4 -> dbcabc
_t_xor_1 -> 3
_t_str5 -> dbca
_t_xor_2 -> 0
_t_str0 -> String!val!16
_t_str2 -> abc
_t_str3 -> String!val!8
x -> String!val!3
*****************************

** Reset():

** Delete()
