Input file: /tmp/z3_str_convert/star-006


Input loaded:
-----------------------------------------------
(= (Concat y (Star __regex__x61_x62_x63_x7c_x64_x62_x63_x61_x62_x63 n))
   (Concat x __cOnStStR__x62_x63_x61_x62_x63))
-----------------------------------------------

>> regex_parse(): currentAst = 353 "dbcabc"

>> regex_parse(): currentAst = 353 "abc"

>> regex_parse(): 385
_t_str0
 and assert: (or (= _t_str0 dbcabc) (= _t_str0 abc))


===================
** cb_reduce_app(): Star( abc|dbcabc, n )  =>  (Star abc|dbcabc n)
===================
>> make_concat: (Concat y (Star abc|dbcabc n))

>> make_concat: (Concat x bcabc)



***********************************************
*               Starting Search               *
-----------------------------------------------
(and (= (+ (Length (Concat y (Star abc|dbcabc n)))
           (* (- 1) (Length y))
           (* (- 1) (Length (Star abc|dbcabc n))))
        0)
     (= (+ (Length (Concat x bcabc)) (* (- 1) (Length x))) 5)
     (>= (Length _t_str0) 0)
     (= (Concat y (Star abc|dbcabc n)) (Concat x bcabc)))
***********************************************
>> Input Var Set: y, x, 


===============================================
** cb_new_eq():    (Concat x bcabc) = (Concat y (Star abc|dbcabc n))
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat x bcabc) (Concat y (Star abc|dbcabc n))) @ 3487


===============================================
** simplifyConcatEq():
   nn1 = (Concat x bcabc)
   nn2 = (Concat y (Star abc|dbcabc n))
===============================================
[simplifyConcatEq] new_nn1 = (Concat x bcabc)
                   new_nn2 = (Concat y (Star abc|dbcabc n)) @ 2179

#############################
#  SimplifyConcatEq Type 2  #
#############################
>> make_concat: (Concat _t_str1 bcabc)

>> make_concat: (Concat y _t_str1)

>> Length added for: (= x (Concat y _t_str1)) @ 2596

>> Length added for: (= (Star abc|dbcabc n) (Concat _t_str1 bcabc)) @ 2597

>> Length added for: (= (Star abc|dbcabc n) bcabc) @ 2628

>> Length added for: (= y x) @ 2629

>> make_concat: (Concat x b)

>> Length added for: (= (Star abc|dbcabc n) cabc) @ 2628

>> Length added for: (= y (Concat x b)) @ 2629

>> make_concat: (Concat x bc)

>> Length added for: (= (Star abc|dbcabc n) abc) @ 2628

>> Length added for: (= y (Concat x bc)) @ 2629

>> make_concat: (Concat x bca)

>> Length added for: (= (Star abc|dbcabc n) bc) @ 2628

>> Length added for: (= y (Concat x bca)) @ 2629

>> make_concat: (Concat x bcab)

>> Length added for: (= (Star abc|dbcabc n) c) @ 2628

>> Length added for: (= y (Concat x bcab)) @ 2629

>> Length added for: (= (Star abc|dbcabc n) "") @ 2628

>> Length added for: (= y (Concat x bcabc)) @ 2629

---------------------
Axiom Add(@2639, Level 0):
(=> (= (Concat x bcabc) (Concat y (Star abc|dbcabc n)))
    (and (or (= _t_xor_0 0)
             (= _t_xor_0 1)
             (= _t_xor_0 2)
             (= _t_xor_0 3)
             (= _t_xor_0 4)
             (= _t_xor_0 5)
             (= _t_xor_0 6))
         (= (= _t_xor_0 0) (= x (Concat y _t_str1)))
         (= (= _t_xor_0 0) (= (Star abc|dbcabc n) (Concat _t_str1 bcabc)))
         (= (= _t_xor_0 0) (> (Length x) (Length y)))
         (= (= _t_xor_0 1) (= y x))
         (= (= _t_xor_0 1) (= (Star abc|dbcabc n) bcabc))
         (= (= _t_xor_0 2) (= y (Concat x b)))
         (= (= _t_xor_0 2) (= (Star abc|dbcabc n) cabc))
         (= (= _t_xor_0 3) (= y (Concat x bc)))
         (= (= _t_xor_0 3) (= (Star abc|dbcabc n) abc))
         (= (= _t_xor_0 4) (= y (Concat x bca)))
         (= (= _t_xor_0 4) (= (Star abc|dbcabc n) bc))
         (= (= _t_xor_0 5) (= y (Concat x bcab)))
         (= (= _t_xor_0 5) (= (Star abc|dbcabc n) c))
         (= (= _t_xor_0 6) (= y (Concat x bcabc)))
         (= (= _t_xor_0 6) (= (Star abc|dbcabc n) ""))))
---------------------


*******************************************
[PUSH]: Level = 1
*******************************************

*******************************************
[PUSH]: Level = 2
*******************************************


===============================================
** cb_new_eq():    (Concat y _t_str1) = x
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat y _t_str1) x) @ 3487



===============================================
** cb_new_eq():    (Concat _t_str1 bcabc) = (Star abc|dbcabc n)
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat _t_str1 bcabc) (Star abc|dbcabc n)) @ 3487


===============================================
** simplifyStarEqConcat():
   starAst = (Star abc|dbcabc n)
   concatAst = (Concat _t_str1 bcabc)
===============================================
[simplifyStarEqConcat] starAst = (Star abc|dbcabc n)
                   new_concat = (Concat _t_str1 bcabc) @ 3080
>> regex_parse(): currentAst = 353 "dbcabc"

>> regex_parse(): currentAst = 353 "abc"

>> regex_parse(): 385
_t_str2
 and assert: (or (= _t_str2 dbcabc) (= _t_str2 abc))

>> make_concat: (Concat (Star abc|dbcabc (+ n (- 1))) _t_str2)

---------------------
Axiom Add(@3173, Level 2):
(=> (= (Star abc|dbcabc n) (Concat _t_str1 bcabc))
    (and (= (Concat _t_str1 bcabc)
            (Concat (Star abc|dbcabc (+ n (- 1))) _t_str2))
         (and (or (= _t_str2 dbcabc) (= _t_str2 abc)) (>= n 1))))
---------------------


*******************************************
[POP]: Level = 1
*******************************************

*******************************************
[POP]: Level = 0
*******************************************

*******************************************
[PUSH]: Level = 1
*******************************************

*******************************************
[PUSH]: Level = 2
*******************************************

*******************************************
[PUSH]: Level = 3
*******************************************

*******************************************
[PUSH]: Level = 4
*******************************************


===============================================
** cb_new_eq():    (Concat x bcabc) = y
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat x bcabc) y) @ 3487



===============================================
** cb_new_eq():    "" = (Star abc|dbcabc n)
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Star abc|dbcabc n) "") @ 3487

** solve_star_eq_str: (Star abc|dbcabc n) = ""
---------------------
Axiom Add(@1630, Level 4):
(not (= (Star abc|dbcabc n) ""))
---------------------

>> [simplifyConcatStr 2 @ 1265] (Concat y (Star abc|dbcabc n))


*******************************************
[POP]: Level = 3
*******************************************

*******************************************
[POP]: Level = 2
*******************************************

*******************************************
[POP]: Level = 1
*******************************************

*******************************************
[POP]: Level = 0
*******************************************

*******************************************
[PUSH]: Level = 1
*******************************************

*******************************************
[PUSH]: Level = 2
*******************************************

*******************************************
[PUSH]: Level = 3
*******************************************


===============================================
** cb_new_eq():    (Concat x bcab) = y
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat x bcab) y) @ 3487



===============================================
** cb_new_eq():    "c" = (Star abc|dbcabc n)
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Star abc|dbcabc n) c) @ 3487

** solve_star_eq_str: (Star abc|dbcabc n) = "c"
---------------------
Axiom Add(@1630, Level 3):
(not (= (Star abc|dbcabc n) c))
---------------------

>> [simplifyConcatStr 2 @ 1265] (Concat y (Star abc|dbcabc n))


*******************************************
[POP]: Level = 2
*******************************************

*******************************************
[POP]: Level = 1
*******************************************

*******************************************
[POP]: Level = 0
*******************************************

*******************************************
[PUSH]: Level = 1
*******************************************

*******************************************
[PUSH]: Level = 2
*******************************************


===============================================
** cb_new_eq():    (Concat x bca) = y
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat x bca) y) @ 3487



===============================================
** cb_new_eq():    "bc" = (Star abc|dbcabc n)
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Star abc|dbcabc n) bc) @ 3487

** solve_star_eq_str: (Star abc|dbcabc n) = "bc"
---------------------
Axiom Add(@1630, Level 2):
(not (= (Star abc|dbcabc n) bc))
---------------------

>> [simplifyConcatStr 2 @ 1265] (Concat y (Star abc|dbcabc n))


*******************************************
[POP]: Level = 1
*******************************************

*******************************************
[POP]: Level = 0
*******************************************

*******************************************
[PUSH]: Level = 1
*******************************************

*******************************************
[PUSH]: Level = 2
*******************************************

*******************************************
[POP]: Level = 1
*******************************************

*******************************************
[PUSH]: Level = 2
*******************************************

*******************************************
[PUSH]: Level = 3
*******************************************


===============================================
** cb_new_eq():    x = y
===============================================
>> New_eq Check: PASS

>> Length added for: (= x y) @ 3487



===============================================
** cb_new_eq():    "bcabc" = (Star abc|dbcabc n)
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Star abc|dbcabc n) bcabc) @ 3487

** solve_star_eq_str: (Star abc|dbcabc n) = "bcabc"
---------------------
Axiom Add(@1630, Level 3):
(not (= (Star abc|dbcabc n) bcabc))
---------------------

>> [simplifyConcatStr 2 @ 1265] (Concat y (Star abc|dbcabc n))


*******************************************
[POP]: Level = 2
*******************************************

*******************************************
[POP]: Level = 1
*******************************************

*******************************************
[POP]: Level = 0
*******************************************

*******************************************
[PUSH]: Level = 1
*******************************************

*******************************************
[PUSH]: Level = 2
*******************************************


===============================================
** cb_new_eq():    (Concat x b) = y
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat x b) y) @ 3487



===============================================
** cb_new_eq():    "cabc" = (Star abc|dbcabc n)
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Star abc|dbcabc n) cabc) @ 3487

** solve_star_eq_str: (Star abc|dbcabc n) = "cabc"
---------------------
Axiom Add(@1630, Level 2):
(not (= (Star abc|dbcabc n) cabc))
---------------------

>> [simplifyConcatStr 2 @ 1265] (Concat y (Star abc|dbcabc n))


*******************************************
[POP]: Level = 1
*******************************************

*******************************************
[POP]: Level = 0
*******************************************

*******************************************
[PUSH]: Level = 1
*******************************************


===============================================
** cb_new_eq():    (Concat y _t_str1) = x
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat y _t_str1) x) @ 3487



===============================================
** cb_new_eq():    (Concat _t_str1 bcabc) = (Star abc|dbcabc n)
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat _t_str1 bcabc) (Star abc|dbcabc n)) @ 3487


===============================================
** simplifyStarEqConcat():
   starAst = (Star abc|dbcabc n)
   concatAst = (Concat _t_str1 bcabc)
===============================================
[simplifyStarEqConcat] starAst = (Star abc|dbcabc n)
                   new_concat = (Concat _t_str1 bcabc) @ 3080
>> regex_parse(): currentAst = 353 "dbcabc"

>> regex_parse(): currentAst = 353 "abc"

>> regex_parse(): 385
_t_str3
 and assert: (or (= _t_str3 dbcabc) (= _t_str3 abc))

>> make_concat: (Concat (Star abc|dbcabc (+ n (- 1))) _t_str3)

---------------------
Axiom Add(@3173, Level 1):
(=> (= (Star abc|dbcabc n) (Concat _t_str1 bcabc))
    (and (= (Concat _t_str1 bcabc)
            (Concat (Star abc|dbcabc (+ n (- 1))) _t_str3))
         (and (or (= _t_str3 dbcabc) (= _t_str3 abc)) (>= n 1))))
---------------------



===============================================
** cb_new_eq():    (Concat _t_str1 bcabc) = (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str3)
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat _t_str1 bcabc) (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str3)) @ 3487


===============================================
** simplifyConcatEq():
   nn1 = (Concat _t_str1 bcabc)
   nn2 = (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str3)
===============================================
[simplifyConcatEq] new_nn1 = (Concat _t_str1 bcabc)
                   new_nn2 = (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str3) @ 2179

#############################
#  SimplifyConcatEq Type 2  #
#############################
>> make_concat: (Concat _t_str4 bcabc)

>> make_concat: (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str4)

>> Length added for: (= _t_str1 (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str4)) @ 2596

>> Length added for: (= _t_str3 (Concat _t_str4 bcabc)) @ 2597

>> Length added for: (= _t_str3 bcabc) @ 2628

>> Length added for: (= (Star abc|dbcabc (+ (- 1) n)) _t_str1) @ 2629

>> make_concat: (Concat _t_str1 b)

>> Length added for: (= _t_str3 cabc) @ 2628

>> Length added for: (= (Star abc|dbcabc (+ (- 1) n)) (Concat _t_str1 b)) @ 2629

>> make_concat: (Concat _t_str1 bc)

>> Length added for: (= _t_str3 abc) @ 2628

>> Length added for: (= (Star abc|dbcabc (+ (- 1) n)) (Concat _t_str1 bc)) @ 2629

>> make_concat: (Concat _t_str1 bca)

>> Length added for: (= _t_str3 bc) @ 2628

>> Length added for: (= (Star abc|dbcabc (+ (- 1) n)) (Concat _t_str1 bca)) @ 2629

>> make_concat: (Concat _t_str1 bcab)

>> Length added for: (= _t_str3 c) @ 2628

>> Length added for: (= (Star abc|dbcabc (+ (- 1) n)) (Concat _t_str1 bcab)) @ 2629

>> Length added for: (= (Star abc|dbcabc (+ (- 1) n)) (Concat _t_str1 bcabc)) @ 2629

---------------------
Axiom Add(@2639, Level 1):
(=> (= (Concat _t_str1 bcabc) (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str3))
    (and (or (= _t_xor_1 0)
             (= _t_xor_1 1)
             (= _t_xor_1 2)
             (= _t_xor_1 3)
             (= _t_xor_1 4)
             (= _t_xor_1 5)
             (= _t_xor_1 6))
         (= (= _t_xor_1 0)
            (= _t_str1 (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str4)))
         (= (= _t_xor_1 0) (= _t_str3 (Concat _t_str4 bcabc)))
         (= (= _t_xor_1 0)
            (> (Length _t_str1) (Length (Star abc|dbcabc (+ (- 1) n)))))
         (= (= _t_xor_1 1) (= (Star abc|dbcabc (+ (- 1) n)) _t_str1))
         (= (= _t_xor_1 1) (= _t_str3 bcabc))
         (= (= _t_xor_1 2) (= (Star abc|dbcabc (+ (- 1) n)) (Concat _t_str1 b)))
         (= (= _t_xor_1 2) (= _t_str3 cabc))
         (= (= _t_xor_1 3)
            (= (Star abc|dbcabc (+ (- 1) n)) (Concat _t_str1 bc)))
         (= (= _t_xor_1 3) (= _t_str3 abc))
         (= (= _t_xor_1 4)
            (= (Star abc|dbcabc (+ (- 1) n)) (Concat _t_str1 bca)))
         (= (= _t_xor_1 4) (= _t_str3 bc))
         (= (= _t_xor_1 5)
            (= (Star abc|dbcabc (+ (- 1) n)) (Concat _t_str1 bcab)))
         (= (= _t_xor_1 5) (= _t_str3 c))
         (= (= _t_xor_1 6)
            (= (Star abc|dbcabc (+ (- 1) n)) (Concat _t_str1 bcabc)))
         (= (= _t_xor_1 6) (= _t_str3 ""))))
---------------------


===============================================
** simplifyStarEqConcat():
   starAst = (Star abc|dbcabc n)
   concatAst = (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str3)
===============================================
[simplifyStarEqConcat] starAst = (Star abc|dbcabc n)
                   new_concat = (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str3) @ 3080

*******************************************
[PUSH]: Level = 2
*******************************************

*******************************************
[PUSH]: Level = 3
*******************************************

*******************************************
[PUSH]: Level = 4
*******************************************

*******************************************
[PUSH]: Level = 5
*******************************************

*******************************************
[PUSH]: Level = 6
*******************************************


===============================================
** cb_new_eq():    "dbcabc" = _t_str3
===============================================
>> New_eq Check: PASS

>> Length added for: (= _t_str3 dbcabc) @ 3487

>> [simplifyConcatStr 2 @ 1265] (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str3)


*******************************************
[POP]: Level = 5
*******************************************

*******************************************
[POP]: Level = 4
*******************************************

*******************************************
[POP]: Level = 3
*******************************************

*******************************************
[POP]: Level = 2
*******************************************

*******************************************
[POP]: Level = 1
*******************************************

*******************************************
[PUSH]: Level = 2
*******************************************


===============================================
** cb_new_eq():    "dbcabc" = _t_str3
===============================================
>> New_eq Check: PASS

>> Length added for: (= _t_str3 dbcabc) @ 3487

>> [simplifyConcatStr 2 @ 1265] (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str3)



===============================================
** cb_new_eq():    (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str4) = _t_str1
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str4) _t_str1) @ 3487



===============================================
** cb_new_eq():    _t_str3 = (Concat _t_str4 bcabc)
===============================================
>> New_eq Check: PASS

>> Length added for: (= _t_str3 (Concat _t_str4 bcabc)) @ 3487

** solve_concat_eq_str: (Concat _t_str4 bcabc) = "dbcabc"
>> Length added for: (= _t_str4 d) @ 1742

---------------------
Axiom Add(@1743, Level 2):
(=> (= (Concat _t_str4 bcabc) dbcabc) (= _t_str4 d))
---------------------



===============================================
** cb_new_eq():    "d" = _t_str4
===============================================
>> New_eq Check: PASS

>> Length added for: (= _t_str4 d) @ 3487

>> [simplifyConcatStr 1 @ 1230] (Concat _t_str4 bcabc)

>> [simplifyConcatStr 2 @ 1265] (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str4)


*******************************************
[PUSH]: Level = 3
*******************************************

*******************************************
[PUSH]: Level = 4
*******************************************

*******************************************
[PUSH]: Level = 5
*******************************************

*******************************************
[PUSH]: Level = 6
*******************************************

*******************************************
[PUSH]: Level = 7
*******************************************

*******************************************
[PUSH]: Level = 8
*******************************************

*******************************************
[POP]: Level = 7
*******************************************

*******************************************
[POP]: Level = 6
*******************************************

*******************************************
[POP]: Level = 5
*******************************************

*******************************************
[POP]: Level = 4
*******************************************

*******************************************
[POP]: Level = 3
*******************************************

*******************************************
[POP]: Level = 2
*******************************************

*******************************************
[PUSH]: Level = 3
*******************************************

*******************************************
[PUSH]: Level = 4
*******************************************

*******************************************
[PUSH]: Level = 5
*******************************************

*******************************************
[PUSH]: Level = 6
*******************************************

*******************************************
[PUSH]: Level = 7
*******************************************

*******************************************
[PUSH]: Level = 8
*******************************************

*******************************************
[PUSH]: Level = 9
*******************************************

*******************************************
[PUSH]: Level = 10
*******************************************



vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
                cb_final_check @ Level [10] 
=============================================================

******************************************
       Dependence Analysis
------------------------------------------
(0) alias: variables

(1) var = constStr:
  _t_str3 = "dbcabc"
  _t_str4 = "d"

(2) var = concat:
  x = { (Concat y _t_str1), }
  _t_str1 = { (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str4), }
  _t_str3 = { (Concat _t_str4 bcabc), }

(3) concat = constStr:
  (Concat _t_str4 bcabc) = "dbcabc"

(4) eq concats:
  >> (Concat y (Star abc|dbcabc n)) , (Concat x bcabc) , 
  >> (Concat _t_str1 bcabc) , (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str3) , 


-- Dependence Map -----------------
x	-->	y(2), _t_str1(2), 
_t_str1	-->	_t_str4(2), 
_t_str3	-->	"dbcabc"(1), "bcabc"(5), _t_str4(2), 
_t_str4	-->	"dbcabc"(3), "d"(1), 
(Star abc|dbcabc n)	-->	"bcabc"(5), 
-----------------------------------

-- L/R Most Var in eq concat ------
  >> [L] {y, x, }
  >> [L] {_t_str1, (Star abc|dbcabc (+ (- 1) n)), }
-----------------------------------

-- L/R constraints ----------------
y	<->	{x, }
x	<->	{y, }
_t_str1	<->	{(Star abc|dbcabc (+ (- 1) n)), }
(Star abc|dbcabc (+ (- 1) n))	<->	{_t_str1, }
-----------------------------------


************************************************
Further split needed for: (Star abc|dbcabc n) with "bcabc", [depType = 5]

(Concat y (Star abc|dbcabc n)) = (Concat x bcabc)
************************************************
* toBreak1: (Concat y (Star abc|dbcabc n))
* toBreak2: (Concat x bcabc)

===============================================
** simplifyConcatEq():
   nn1 = (Concat y (Star abc|dbcabc n))
   nn2 = (Concat x bcabc)
===============================================
[simplifyConcatEq] new_nn1 = (Concat y (Star abc|dbcabc n))
                   new_nn2 = (Concat x bcabc) @ 2179

#############################
#  SimplifyConcatEq Type 2  #
#############################
>> Length added for: (= x (Concat y _t_str1)) @ 2596

>> Length added for: (= (Star abc|dbcabc n) (Concat _t_str1 bcabc)) @ 2597

>> Length added for: (= (Star abc|dbcabc n) bcabc) @ 2628

>> Length added for: (= y x) @ 2629

>> Length added for: (= (Star abc|dbcabc n) cabc) @ 2628

>> Length added for: (= y (Concat x b)) @ 2629

>> Length added for: (= (Star abc|dbcabc n) abc) @ 2628

>> Length added for: (= y (Concat x bc)) @ 2629

>> Length added for: (= (Star abc|dbcabc n) bc) @ 2628

>> Length added for: (= y (Concat x bca)) @ 2629

>> Length added for: (= (Star abc|dbcabc n) c) @ 2628

>> Length added for: (= y (Concat x bcab)) @ 2629

>> Length added for: (= (Star abc|dbcabc n) "") @ 2628

>> Length added for: (= y (Concat x bcabc)) @ 2629

---------------------
Axiom Add(@2639, Level 10):
(=> (= (Concat y (Star abc|dbcabc n)) (Concat x bcabc))
    (and (or (= _t_xor_0 0)
             (= _t_xor_0 1)
             (= _t_xor_0 2)
             (= _t_xor_0 3)
             (= _t_xor_0 4)
             (= _t_xor_0 5)
             (= _t_xor_0 6))
         (= (= _t_xor_0 0) (= x (Concat y _t_str1)))
         (= (= _t_xor_0 0) (= (Star abc|dbcabc n) (Concat _t_str1 bcabc)))
         (= (= _t_xor_0 0) (> (Length x) (Length y)))
         (= (= _t_xor_0 1) (= y x))
         (= (= _t_xor_0 1) (= (Star abc|dbcabc n) bcabc))
         (= (= _t_xor_0 2) (= y (Concat x b)))
         (= (= _t_xor_0 2) (= (Star abc|dbcabc n) cabc))
         (= (= _t_xor_0 3) (= y (Concat x bc)))
         (= (= _t_xor_0 3) (= (Star abc|dbcabc n) abc))
         (= (= _t_xor_0 4) (= y (Concat x bca)))
         (= (= _t_xor_0 4) (= (Star abc|dbcabc n) bc))
         (= (= _t_xor_0 5) (= y (Concat x bcab)))
         (= (= _t_xor_0 5) (= (Star abc|dbcabc n) c))
         (= (= _t_xor_0 6) (= y (Concat x bcabc)))
         (= (= _t_xor_0 6) (= (Star abc|dbcabc n) ""))))
---------------------


###########################################################




vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
                cb_final_check @ Level [10] 
=============================================================

******************************************
       Dependence Analysis
------------------------------------------
(0) alias: variables

(1) var = constStr:
  _t_str3 = "dbcabc"
  _t_str4 = "d"

(2) var = concat:
  x = { (Concat y _t_str1), }
  _t_str1 = { (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str4), }
  _t_str3 = { (Concat _t_str4 bcabc), }

(3) concat = constStr:
  (Concat _t_str4 bcabc) = "dbcabc"

(4) eq concats:
  >> (Concat y (Star abc|dbcabc n)) , (Concat x bcabc) , 
  >> (Concat _t_str1 bcabc) , (Concat (Star abc|dbcabc (+ (- 1) n)) _t_str3) , 


-- Dependence Map -----------------
x	-->	y(2), _t_str1(2), 
_t_str1	-->	_t_str4(2), 
_t_str3	-->	"dbcabc"(1), "bcabc"(5), _t_str4(2), 
_t_str4	-->	"dbcabc"(3), "d"(1), 
(Star abc|dbcabc n)	-->	"bcabc"(5), 
-----------------------------------

-- L/R Most Var in eq concat ------
  >> [L] {y, x, }
  >> [L] {_t_str1, (Star abc|dbcabc (+ (- 1) n)), }
-----------------------------------

-- L/R constraints ----------------
y	<->	{x, }
x	<->	{y, }
_t_str1	<->	{(Star abc|dbcabc (+ (- 1) n)), }
(Star abc|dbcabc (+ (- 1) n))	<->	{_t_str1, }
-----------------------------------


************************************************
Further split needed for: (Star abc|dbcabc n) with "bcabc", [depType = 5]

(Concat y (Star abc|dbcabc n)) = (Concat x bcabc)
************************************************
* toBreak1: (Concat y (Star abc|dbcabc n))
* toBreak2: (Concat x bcabc)

===============================================
** simplifyConcatEq():
   nn1 = (Concat y (Star abc|dbcabc n))
   nn2 = (Concat x bcabc)
===============================================
[simplifyConcatEq] new_nn1 = (Concat y (Star abc|dbcabc n))
                   new_nn2 = (Concat x bcabc) @ 2179

#############################
#  SimplifyConcatEq Type 2  #
#############################
>> Length added for: (= x (Concat y _t_str1)) @ 2596

>> Length added for: (= (Star abc|dbcabc n) (Concat _t_str1 bcabc)) @ 2597

>> Length added for: (= (Star abc|dbcabc n) bcabc) @ 2628

>> Length added for: (= y x) @ 2629

>> Length added for: (= (Star abc|dbcabc n) cabc) @ 2628

>> Length added for: (= y (Concat x b)) @ 2629

>> Length added for: (= (Star abc|dbcabc n) abc) @ 2628

>> Length added for: (= y (Concat x bc)) @ 2629

>> Length added for: (= (Star abc|dbcabc n) bc) @ 2628

>> Length added for: (= y (Concat x bca)) @ 2629

>> Length added for: (= (Star abc|dbcabc n) c) @ 2628

>> Length added for: (= y (Concat x bcab)) @ 2629

>> Length added for: (= (Star abc|dbcabc n) "") @ 2628

>> Length added for: (= y (Concat x bcabc)) @ 2629

---------------------
Axiom Add(@2639, Level 10):
(=> (= (Concat y (Star abc|dbcabc n)) (Concat x bcabc))
    (and (or (= _t_xor_0 0)
             (= _t_xor_0 1)
             (= _t_xor_0 2)
             (= _t_xor_0 3)
             (= _t_xor_0 4)
             (= _t_xor_0 5)
             (= _t_xor_0 6))
         (= (= _t_xor_0 0) (= x (Concat y _t_str1)))
         (= (= _t_xor_0 0) (= (Star abc|dbcabc n) (Concat _t_str1 bcabc)))
         (= (= _t_xor_0 0) (> (Length x) (Length y)))
         (= (= _t_xor_0 1) (= y x))
         (= (= _t_xor_0 1) (= (Star abc|dbcabc n) bcabc))
         (= (= _t_xor_0 2) (= y (Concat x b)))
         (= (= _t_xor_0 2) (= (Star abc|dbcabc n) cabc))
         (= (= _t_xor_0 3) (= y (Concat x bc)))
         (= (= _t_xor_0 3) (= (Star abc|dbcabc n) abc))
         (= (= _t_xor_0 4) (= y (Concat x bca)))
         (= (= _t_xor_0 4) (= (Star abc|dbcabc n) bc))
         (= (= _t_xor_0 5) (= y (Concat x bcab)))
         (= (= _t_xor_0 5) (= (Star abc|dbcabc n) c))
         (= (= _t_xor_0 6) (= y (Concat x bcabc)))
         (= (= _t_xor_0 6) (= (Star abc|dbcabc n) ""))))
---------------------


###########################################################


*****************************
SAT
-----------------------------
y -> String!val!0
_t_xor_0 -> 0
n -> 1
_t_str4 -> d
_t_xor_1 -> 0
_t_str0 -> String!val!2
_t_str1 -> String!val!10
_t_str3 -> dbcabc
x -> String!val!4
*****************************

** Reset():

** Delete()
