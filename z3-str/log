Input file: /tmp/z3_str_convert/star-001


Input loaded:
-----------------------------------------------
(and (= x (Star y m)) (= x (Concat z __cOnStStR__x63_x61_x62_x63)))
-----------------------------------------------


===================
** cb_reduce_app(): Star( y, m )  =>  (Star y m)
-- ADD(@5786): 
(= (Length (Star y m)) (* (Length y) m))
===================
>> make_concat: (Concat z cabc)



***********************************************
*               Starting Search               *
-----------------------------------------------
(and (= (+ (Length (Star y m)) (* (- 1) (* m (Length y)))) 0)
     (= (+ (Length (Concat z cabc)) (* (- 1) (Length z))) 4)
     (= x (Star y m))
     (= x (Concat z cabc)))
***********************************************
>> Input Var Set: x, y, z, 


===============================================
** cb_new_eq():    (Star y m) = x
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Star y m) x) @ 3289



===============================================
** cb_new_eq():    x = (Concat z cabc)
===============================================
>> New_eq Check: PASS

>> Length added for: (= x (Concat z cabc)) @ 3289


===============================================
** simplifyStarEqConcat():
   starAst = (Star y m)
   concatAst = (Concat z cabc)
===============================================
[simplifyStarEqConcat] new_star = (Star y m)
                   new_concat = (Concat z cabc) @ 2912
>> make_concat: (Concat (Star y (+ m (- 2))) ab)

>> make_concat: (Concat _t_str0 cabc)

>> make_concat: (Concat (Star y (+ m (- 1))) _t_str0)

---------------------
Axiom Add(@3034, Level 0):
(=> (= (Star y m) (Concat z cabc))
    (or (and (= y abc) (= z (Concat (Star y (+ m (- 2))) ab)))
        (and (= y cabc) (= z (Star y (+ m (- 1)))))
        (and (> (Length y) 4)
             (= y (Concat _t_str0 cabc))
             (= z (Concat (Star y (+ m (- 1))) _t_str0)))))
---------------------


*******************************************
[PUSH]: Level = 1
*******************************************

*******************************************
[PUSH]: Level = 2
*******************************************

*******************************************
[PUSH]: Level = 3
*******************************************

*******************************************
[PUSH]: Level = 4
*******************************************


===============================================
** cb_new_eq():    (Concat (Star y (+ (- 2) m)) ab) = z
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat (Star y (+ (- 2) m)) ab) z) @ 3289



===============================================
** cb_new_eq():    "abc" = y
===============================================
>> New_eq Check: PASS

>> Length added for: (= y abc) @ 3289


*******************************************
[POP]: Level = 3
*******************************************

*******************************************
[POP]: Level = 2
*******************************************

*******************************************
[PUSH]: Level = 3
*******************************************


===============================================
** cb_new_eq():    (Star y (+ (- 1) m)) = z
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Star y (+ (- 1) m)) z) @ 3289



===============================================
** cb_new_eq():    "cabc" = y
===============================================
>> New_eq Check: PASS

>> Length added for: (= y cabc) @ 3289


*******************************************
[POP]: Level = 2
*******************************************


===============================================
** cb_new_eq():    (Concat (Star y (+ (- 1) m)) _t_str0) = z
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat (Star y (+ (- 1) m)) _t_str0) z) @ 3289



===============================================
** cb_new_eq():    (Concat _t_str0 cabc) = y
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat _t_str0 cabc) y) @ 3289


*******************************************
[PUSH]: Level = 3
*******************************************

*******************************************
[PUSH]: Level = 4
*******************************************

*******************************************
[PUSH]: Level = 5
*******************************************



vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
                cb_final_check @ Level [5] 
=============================================================

******************************************
       Dependence Analysis
------------------------------------------
(0) alias: variables

(1) var = constStr:

(2) var = concat:
  x = { (Concat z cabc), }
  y = { (Concat _t_str0 cabc), }
  z = { (Concat (Star y (+ (- 1) m)) _t_str0), }

(3) concat = constStr:

(4) eq concats:


-- Dependence Map -----------------
x	-->	z(2), 
y	-->	_t_str0(2), 
z	-->	y(2), _t_str0(2), 
-----------------------------------

-- L/R Most Var in eq concat ------
-----------------------------------

-- L/R constraints ----------------
-----------------------------------

* Free Variables:
----------------------------------
_t_str0(3), 
----------------------------------

---------------------
Assertion for free var: _t_str0 (@4928, Level 5):
 (and (or (= _t_len__t_str0_1 0)
         (= _t_len__t_str0_1 1)
         (= _t_len__t_str0_1 2)
         (= _t_len__t_str0_1 more))
     (= (= _t_len__t_str0_1 0) (= (Length _t_str0) 0))
     (= (= _t_len__t_str0_1 1) (= (Length _t_str0) 1))
     (= (= _t_len__t_str0_1 2) (= (Length _t_str0) 2))
     (= (= _t_len__t_str0_1 more) (>= (Length _t_str0) 3)))
---------------------

###########################################################


*******************************************
[PUSH]: Level = 6
*******************************************

*******************************************
[PUSH]: Level = 7
*******************************************


===============================================
** cb_new_eq():    "more" = _t_len__t_str0_1
===============================================

>> effectiveLenIndiStr = , i = 1,lenTesterCount = 1

---------------------
>> Var: _t_str0 (@3177, Level 7):
 (=> (= _t_len__t_str0_1 more)
    (and (or (= _t_len__t_str0_2 3)
             (= _t_len__t_str0_2 4)
             (= _t_len__t_str0_2 5)
             (= _t_len__t_str0_2 more))
         (= (= _t_len__t_str0_2 3) (= (Length _t_str0) 3))
         (= (= _t_len__t_str0_2 4) (= (Length _t_str0) 4))
         (= (= _t_len__t_str0_2 5) (= (Length _t_str0) 5))
         (= (= _t_len__t_str0_2 more) (>= (Length _t_str0) 6))))
---------------------

*******************************************
[PUSH]: Level = 8
*******************************************

*******************************************
[PUSH]: Level = 9
*******************************************

*******************************************
[PUSH]: Level = 10
*******************************************

*******************************************
[PUSH]: Level = 11
*******************************************


===============================================
** cb_new_eq():    "4" = _t_len__t_str0_2
===============================================

>> effectiveLenIndiStr = , i = 2,lenTesterCount = 2

---------------------
>> Var: _t_str0 (@3177, Level 11):
 (=> (and (= _t_len__t_str0_1 more) (= _t_len__t_str0_2 more))
    (and (or (= _t_len__t_str0_3 6)
             (= _t_len__t_str0_3 7)
             (= _t_len__t_str0_3 8)
             (= _t_len__t_str0_3 more))
         (= (= _t_len__t_str0_3 6) (= (Length _t_str0) 6))
         (= (= _t_len__t_str0_3 7) (= (Length _t_str0) 7))
         (= (= _t_len__t_str0_3 8) (= (Length _t_str0) 8))
         (= (= _t_len__t_str0_3 more) (>= (Length _t_str0) 9))))
---------------------

*******************************************
[PUSH]: Level = 12
*******************************************

*******************************************
[PUSH]: Level = 13
*******************************************

*******************************************
[PUSH]: Level = 14
*******************************************

*******************************************
[PUSH]: Level = 15
*******************************************

*******************************************
[PUSH]: Level = 16
*******************************************



vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
                cb_final_check @ Level [16] 
=============================================================

******************************************
       Dependence Analysis
------------------------------------------
(0) alias: variables

(1) var = constStr:

(2) var = concat:
  x = { (Concat z cabc), }
  y = { (Concat _t_str0 cabc), }
  z = { (Concat (Star y (+ (- 1) m)) _t_str0), }

(3) concat = constStr:

(4) eq concats:


-- Dependence Map -----------------
x	-->	z(2), 
y	-->	_t_str0(2), 
z	-->	y(2), _t_str0(2), 
-----------------------------------

-- L/R Most Var in eq concat ------
-----------------------------------

-- L/R constraints ----------------
-----------------------------------

* Free Variables:
----------------------------------
_t_str0(3), 
----------------------------------
>> valueTesterList @ 4631 = { 
    (16, _t_val__t_str0_4_0), 
   }

>> Value Tester Encoding = { 127,  0,  0,  0,  0, }


---------------------
Assertion for free var: _t_str0 (@4928, Level 16):
 (=> (= _t_len__t_str0_2 4)
    (and (or (= _t_val__t_str0_4_0 0)
             (= _t_val__t_str0_4_0 1)
             (= _t_val__t_str0_4_0 2)
             (= _t_val__t_str0_4_0 3)
             (= _t_val__t_str0_4_0 4)
             (= _t_val__t_str0_4_0 5)
             (= _t_val__t_str0_4_0 6)
             (= _t_val__t_str0_4_0 7)
             (= _t_val__t_str0_4_0 8)
             (= _t_val__t_str0_4_0 9)
             (= _t_val__t_str0_4_0 10)
             (= _t_val__t_str0_4_0 11)
             (= _t_val__t_str0_4_0 12)
             (= _t_val__t_str0_4_0 13)
             (= _t_val__t_str0_4_0 14)
             (= _t_val__t_str0_4_0 15)
             (= _t_val__t_str0_4_0 16)
             (= _t_val__t_str0_4_0 17)
             (= _t_val__t_str0_4_0 18)
             (= _t_val__t_str0_4_0 19)
             (= _t_val__t_str0_4_0 20)
             (= _t_val__t_str0_4_0 21)
             (= _t_val__t_str0_4_0 22)
             (= _t_val__t_str0_4_0 23)
             (= _t_val__t_str0_4_0 24)
             (= _t_val__t_str0_4_0 25)
             (= _t_val__t_str0_4_0 26)
             (= _t_val__t_str0_4_0 27)
             (= _t_val__t_str0_4_0 28)
             (= _t_val__t_str0_4_0 29)
             (= _t_val__t_str0_4_0 30)
             (= _t_val__t_str0_4_0 31)
             (= _t_val__t_str0_4_0 32)
             (= _t_val__t_str0_4_0 33)
             (= _t_val__t_str0_4_0 34)
             (= _t_val__t_str0_4_0 35)
             (= _t_val__t_str0_4_0 36)
             (= _t_val__t_str0_4_0 37)
             (= _t_val__t_str0_4_0 38)
             (= _t_val__t_str0_4_0 39)
             (= _t_val__t_str0_4_0 40)
             (= _t_val__t_str0_4_0 41)
             (= _t_val__t_str0_4_0 42)
             (= _t_val__t_str0_4_0 43)
             (= _t_val__t_str0_4_0 44)
             (= _t_val__t_str0_4_0 45)
             (= _t_val__t_str0_4_0 46)
             (= _t_val__t_str0_4_0 47)
             (= _t_val__t_str0_4_0 48)
             (= _t_val__t_str0_4_0 49)
             (= _t_val__t_str0_4_0 50)
             (= _t_val__t_str0_4_0 51)
             (= _t_val__t_str0_4_0 52)
             (= _t_val__t_str0_4_0 53)
             (= _t_val__t_str0_4_0 54)
             (= _t_val__t_str0_4_0 55)
             (= _t_val__t_str0_4_0 56)
             (= _t_val__t_str0_4_0 57)
             (= _t_val__t_str0_4_0 58)
             (= _t_val__t_str0_4_0 59)
             (= _t_val__t_str0_4_0 60)
             (= _t_val__t_str0_4_0 61)
             (= _t_val__t_str0_4_0 62)
             (= _t_val__t_str0_4_0 63)
             (= _t_val__t_str0_4_0 64)
             (= _t_val__t_str0_4_0 65)
             (= _t_val__t_str0_4_0 66)
             (= _t_val__t_str0_4_0 67)
             (= _t_val__t_str0_4_0 68)
             (= _t_val__t_str0_4_0 69)
             (= _t_val__t_str0_4_0 70)
             (= _t_val__t_str0_4_0 71)
             (= _t_val__t_str0_4_0 72)
             (= _t_val__t_str0_4_0 73)
             (= _t_val__t_str0_4_0 74)
             (= _t_val__t_str0_4_0 75)
             (= _t_val__t_str0_4_0 76)
             (= _t_val__t_str0_4_0 77)
             (= _t_val__t_str0_4_0 78)
             (= _t_val__t_str0_4_0 79)
             (= _t_val__t_str0_4_0 80)
             (= _t_val__t_str0_4_0 81)
             (= _t_val__t_str0_4_0 82)
             (= _t_val__t_str0_4_0 83)
             (= _t_val__t_str0_4_0 84)
             (= _t_val__t_str0_4_0 85)
             (= _t_val__t_str0_4_0 86)
             (= _t_val__t_str0_4_0 87)
             (= _t_val__t_str0_4_0 88)
             (= _t_val__t_str0_4_0 89)
             (= _t_val__t_str0_4_0 90)
             (= _t_val__t_str0_4_0 91)
             (= _t_val__t_str0_4_0 92)
             (= _t_val__t_str0_4_0 93)
             (= _t_val__t_str0_4_0 94)
             (= _t_val__t_str0_4_0 95)
             (= _t_val__t_str0_4_0 96)
             (= _t_val__t_str0_4_0 97)
             (= _t_val__t_str0_4_0 98)
             (= _t_val__t_str0_4_0 99)
             (= _t_val__t_str0_4_0 100)
             (= _t_val__t_str0_4_0 101)
             (= _t_val__t_str0_4_0 102)
             (= _t_val__t_str0_4_0 103)
             (= _t_val__t_str0_4_0 104)
             (= _t_val__t_str0_4_0 105)
             (= _t_val__t_str0_4_0 106)
             (= _t_val__t_str0_4_0 107)
             (= _t_val__t_str0_4_0 108)
             (= _t_val__t_str0_4_0 109)
             (= _t_val__t_str0_4_0 110)
             (= _t_val__t_str0_4_0 111)
             (= _t_val__t_str0_4_0 112)
             (= _t_val__t_str0_4_0 113)
             (= _t_val__t_str0_4_0 114)
             (= _t_val__t_str0_4_0 115)
             (= _t_val__t_str0_4_0 116)
             (= _t_val__t_str0_4_0 117)
             (= _t_val__t_str0_4_0 118)
             (= _t_val__t_str0_4_0 119)
             (= _t_val__t_str0_4_0 120)
             (= _t_val__t_str0_4_0 121)
             (= _t_val__t_str0_4_0 122)
             (= _t_val__t_str0_4_0 123)
             (= _t_val__t_str0_4_0 124)
             (= _t_val__t_str0_4_0 125)
             (= _t_val__t_str0_4_0 126)
             (= _t_val__t_str0_4_0 127)
             (= _t_val__t_str0_4_0 more))
         (= (= _t_val__t_str0_4_0 0) (= _t_str0 aaaa))
         (= (= _t_val__t_str0_4_0 1) (= _t_str0 aaab))
         (= (= _t_val__t_str0_4_0 2) (= _t_str0 aaac))
         (= (= _t_val__t_str0_4_0 3) (= _t_str0 aaad))
         (= (= _t_val__t_str0_4_0 4) (= _t_str0 aaae))
         (= (= _t_val__t_str0_4_0 5) (= _t_str0 aaaf))
         (= (= _t_val__t_str0_4_0 6) (= _t_str0 aaag))
         (= (= _t_val__t_str0_4_0 7) (= _t_str0 aaah))
         (= (= _t_val__t_str0_4_0 8) (= _t_str0 aaai))
         (= (= _t_val__t_str0_4_0 9) (= _t_str0 aaaj))
         (= (= _t_val__t_str0_4_0 10) (= _t_str0 aaak))
         (= (= _t_val__t_str0_4_0 11) (= _t_str0 aaal))
         (= (= _t_val__t_str0_4_0 12) (= _t_str0 aaam))
         (= (= _t_val__t_str0_4_0 13) (= _t_str0 aaan))
         (= (= _t_val__t_str0_4_0 14) (= _t_str0 aaao))
         (= (= _t_val__t_str0_4_0 15) (= _t_str0 aaap))
         (= (= _t_val__t_str0_4_0 16) (= _t_str0 aaaq))
         (= (= _t_val__t_str0_4_0 17) (= _t_str0 aaar))
         (= (= _t_val__t_str0_4_0 18) (= _t_str0 aaas))
         (= (= _t_val__t_str0_4_0 19) (= _t_str0 aaat))
         (= (= _t_val__t_str0_4_0 20) (= _t_str0 aaau))
         (= (= _t_val__t_str0_4_0 21) (= _t_str0 aaav))
         (= (= _t_val__t_str0_4_0 22) (= _t_str0 aaaw))
         (= (= _t_val__t_str0_4_0 23) (= _t_str0 aaax))
         (= (= _t_val__t_str0_4_0 24) (= _t_str0 aaay))
         (= (= _t_val__t_str0_4_0 25) (= _t_str0 aaaz))
         (= (= _t_val__t_str0_4_0 26) (= _t_str0 aaaA))
         (= (= _t_val__t_str0_4_0 27) (= _t_str0 aaaB))
         (= (= _t_val__t_str0_4_0 28) (= _t_str0 aaaC))
         (= (= _t_val__t_str0_4_0 29) (= _t_str0 aaaD))
         (= (= _t_val__t_str0_4_0 30) (= _t_str0 aaaE))
         (= (= _t_val__t_str0_4_0 31) (= _t_str0 aaaF))
         (= (= _t_val__t_str0_4_0 32) (= _t_str0 aaaG))
         (= (= _t_val__t_str0_4_0 33) (= _t_str0 aaaH))
         (= (= _t_val__t_str0_4_0 34) (= _t_str0 aaaI))
         (= (= _t_val__t_str0_4_0 35) (= _t_str0 aaaJ))
         (= (= _t_val__t_str0_4_0 36) (= _t_str0 aaaK))
         (= (= _t_val__t_str0_4_0 37) (= _t_str0 aaaL))
         (= (= _t_val__t_str0_4_0 38) (= _t_str0 aaaM))
         (= (= _t_val__t_str0_4_0 39) (= _t_str0 aaaN))
         (= (= _t_val__t_str0_4_0 40) (= _t_str0 aaaO))
         (= (= _t_val__t_str0_4_0 41) (= _t_str0 aaaP))
         (= (= _t_val__t_str0_4_0 42) (= _t_str0 aaaQ))
         (= (= _t_val__t_str0_4_0 43) (= _t_str0 aaaR))
         (= (= _t_val__t_str0_4_0 44) (= _t_str0 aaaS))
         (= (= _t_val__t_str0_4_0 45) (= _t_str0 aaaT))
         (= (= _t_val__t_str0_4_0 46) (= _t_str0 aaaU))
         (= (= _t_val__t_str0_4_0 47) (= _t_str0 aaaV))
         (= (= _t_val__t_str0_4_0 48) (= _t_str0 aaaW))
         (= (= _t_val__t_str0_4_0 49) (= _t_str0 aaaX))
         (= (= _t_val__t_str0_4_0 50) (= _t_str0 aaaY))
         (= (= _t_val__t_str0_4_0 51) (= _t_str0 aaaZ))
         (= (= _t_val__t_str0_4_0 52) (= _t_str0 aaa0))
         (= (= _t_val__t_str0_4_0 53) (= _t_str0 aaa1))
         (= (= _t_val__t_str0_4_0 54) (= _t_str0 aaa2))
         (= (= _t_val__t_str0_4_0 55) (= _t_str0 aaa3))
         (= (= _t_val__t_str0_4_0 56) (= _t_str0 aaa4))
         (= (= _t_val__t_str0_4_0 57) (= _t_str0 aaa5))
         (= (= _t_val__t_str0_4_0 58) (= _t_str0 aaa6))
         (= (= _t_val__t_str0_4_0 59) (= _t_str0 aaa7))
         (= (= _t_val__t_str0_4_0 60) (= _t_str0 aaa8))
         (= (= _t_val__t_str0_4_0 61) (= _t_str0 aaa9))
         (= (= _t_val__t_str0_4_0 62) (= _t_str0 aaa ))
         (= (= _t_val__t_str0_4_0 63) (= _t_str0 aaa!))
         (= (= _t_val__t_str0_4_0 64) (= _t_str0 aaa"))
         (= (= _t_val__t_str0_4_0 65) (= _t_str0 aaa#))
         (= (= _t_val__t_str0_4_0 66) (= _t_str0 aaa$))
         (= (= _t_val__t_str0_4_0 67) (= _t_str0 aaa%))
         (= (= _t_val__t_str0_4_0 68) (= _t_str0 aaa&))
         (= (= _t_val__t_str0_4_0 69) (= _t_str0 aaa'))
         (= (= _t_val__t_str0_4_0 70) (= _t_str0 aaa())
         (= (= _t_val__t_str0_4_0 71) (= _t_str0 aaa)))
         (= (= _t_val__t_str0_4_0 72) (= _t_str0 aaa*))
         (= (= _t_val__t_str0_4_0 73) (= _t_str0 aaa+))
         (= (= _t_val__t_str0_4_0 74) (= _t_str0 aaa,))
         (= (= _t_val__t_str0_4_0 75) (= _t_str0 aaa-))
         (= (= _t_val__t_str0_4_0 76) (= _t_str0 aaa.))
         (= (= _t_val__t_str0_4_0 77) (= _t_str0 aaa/))
         (= (= _t_val__t_str0_4_0 78) (= _t_str0 aaa:))
         (= (= _t_val__t_str0_4_0 79) (= _t_str0 aaa;))
         (= (= _t_val__t_str0_4_0 80) (= _t_str0 aaa<))
         (= (= _t_val__t_str0_4_0 81) (= _t_str0 aaa=))
         (= (= _t_val__t_str0_4_0 82) (= _t_str0 aaa>))
         (= (= _t_val__t_str0_4_0 83) (= _t_str0 aaa?))
         (= (= _t_val__t_str0_4_0 84) (= _t_str0 aaa@))
         (= (= _t_val__t_str0_4_0 85) (= _t_str0 aaa[))
         (= (= _t_val__t_str0_4_0 86) (= _t_str0 aaa\))
         (= (= _t_val__t_str0_4_0 87) (= _t_str0 aaa]))
         (= (= _t_val__t_str0_4_0 88) (= _t_str0 aaa^))
         (= (= _t_val__t_str0_4_0 89) (= _t_str0 aaa_))
         (= (= _t_val__t_str0_4_0 90) (= _t_str0 aaa`))
         (= (= _t_val__t_str0_4_0 91) (= _t_str0 aaa{))
         (= (= _t_val__t_str0_4_0 92) (= _t_str0 aaa|))
         (= (= _t_val__t_str0_4_0 93) (= _t_str0 aaa}))
         (= (= _t_val__t_str0_4_0 94) (= _t_str0 aaa~))
         (= (= _t_val__t_str0_4_0 95) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 96) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 97) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 98) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 99) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 100) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 101) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 102) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 103) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 104) (= _t_str0 aaa	))
         (= (= _t_val__t_str0_4_0 105) (= _t_str0 aaa
))
         (= (= _t_val__t_str0_4_0 106) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 107) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 108) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 109) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 110) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 111) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 112) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 113) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 114) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 115) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 116) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 117) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 118) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 119) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 120) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 121) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 122) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 123) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 124) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 125) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 126) (= _t_str0 aaa))
         (= (= _t_val__t_str0_4_0 127) (= _t_str0 aaa))))
---------------------

###########################################################


*******************************************
[PUSH]: Level = 17
*******************************************

*******************************************
[PUSH]: Level = 18
*******************************************

*******************************************
[PUSH]: Level = 19
*******************************************

*******************************************
[PUSH]: Level = 20
*******************************************

*******************************************
[PUSH]: Level = 21
*******************************************

*******************************************
[PUSH]: Level = 22
*******************************************

*******************************************
[PUSH]: Level = 23
*******************************************

*******************************************
[PUSH]: Level = 24
*******************************************

*******************************************
[PUSH]: Level = 25
*******************************************

*******************************************
[PUSH]: Level = 26
*******************************************

*******************************************
[PUSH]: Level = 27
*******************************************

*******************************************
[PUSH]: Level = 28
*******************************************

*******************************************
[PUSH]: Level = 29
*******************************************

*******************************************
[PUSH]: Level = 30
*******************************************

*******************************************
[PUSH]: Level = 31
*******************************************

*******************************************
[PUSH]: Level = 32
*******************************************

*******************************************
[PUSH]: Level = 33
*******************************************

*******************************************
[PUSH]: Level = 34
*******************************************

*******************************************
[PUSH]: Level = 35
*******************************************

*******************************************
[PUSH]: Level = 36
*******************************************

*******************************************
[PUSH]: Level = 37
*******************************************

*******************************************
[PUSH]: Level = 38
*******************************************

*******************************************
[PUSH]: Level = 39
*******************************************

*******************************************
[PUSH]: Level = 40
*******************************************

*******************************************
[PUSH]: Level = 41
*******************************************

*******************************************
[PUSH]: Level = 42
*******************************************

*******************************************
[PUSH]: Level = 43
*******************************************

*******************************************
[PUSH]: Level = 44
*******************************************

*******************************************
[PUSH]: Level = 45
*******************************************

*******************************************
[PUSH]: Level = 46
*******************************************

*******************************************
[PUSH]: Level = 47
*******************************************

*******************************************
[PUSH]: Level = 48
*******************************************

*******************************************
[PUSH]: Level = 49
*******************************************

*******************************************
[PUSH]: Level = 50
*******************************************

*******************************************
[PUSH]: Level = 51
*******************************************

*******************************************
[PUSH]: Level = 52
*******************************************

*******************************************
[PUSH]: Level = 53
*******************************************

*******************************************
[PUSH]: Level = 54
*******************************************

*******************************************
[PUSH]: Level = 55
*******************************************

*******************************************
[PUSH]: Level = 56
*******************************************

*******************************************
[PUSH]: Level = 57
*******************************************

*******************************************
[PUSH]: Level = 58
*******************************************

*******************************************
[PUSH]: Level = 59
*******************************************

*******************************************
[PUSH]: Level = 60
*******************************************

*******************************************
[PUSH]: Level = 61
*******************************************

*******************************************
[PUSH]: Level = 62
*******************************************

*******************************************
[PUSH]: Level = 63
*******************************************

*******************************************
[PUSH]: Level = 64
*******************************************

*******************************************
[PUSH]: Level = 65
*******************************************

*******************************************
[PUSH]: Level = 66
*******************************************

*******************************************
[PUSH]: Level = 67
*******************************************

*******************************************
[PUSH]: Level = 68
*******************************************

*******************************************
[PUSH]: Level = 69
*******************************************

*******************************************
[PUSH]: Level = 70
*******************************************

*******************************************
[PUSH]: Level = 71
*******************************************

*******************************************
[PUSH]: Level = 72
*******************************************

*******************************************
[PUSH]: Level = 73
*******************************************

*******************************************
[PUSH]: Level = 74
*******************************************

*******************************************
[PUSH]: Level = 75
*******************************************

*******************************************
[PUSH]: Level = 76
*******************************************

*******************************************
[PUSH]: Level = 77
*******************************************

*******************************************
[PUSH]: Level = 78
*******************************************

*******************************************
[PUSH]: Level = 79
*******************************************

*******************************************
[PUSH]: Level = 80
*******************************************

*******************************************
[PUSH]: Level = 81
*******************************************

*******************************************
[PUSH]: Level = 82
*******************************************

*******************************************
[PUSH]: Level = 83
*******************************************

*******************************************
[PUSH]: Level = 84
*******************************************

*******************************************
[PUSH]: Level = 85
*******************************************

*******************************************
[PUSH]: Level = 86
*******************************************

*******************************************
[PUSH]: Level = 87
*******************************************

*******************************************
[PUSH]: Level = 88
*******************************************

*******************************************
[PUSH]: Level = 89
*******************************************

*******************************************
[PUSH]: Level = 90
*******************************************

*******************************************
[PUSH]: Level = 91
*******************************************

*******************************************
[PUSH]: Level = 92
*******************************************

*******************************************
[PUSH]: Level = 93
*******************************************

*******************************************
[PUSH]: Level = 94
*******************************************

*******************************************
[PUSH]: Level = 95
*******************************************

*******************************************
[PUSH]: Level = 96
*******************************************

*******************************************
[PUSH]: Level = 97
*******************************************

*******************************************
[PUSH]: Level = 98
*******************************************

*******************************************
[PUSH]: Level = 99
*******************************************

*******************************************
[PUSH]: Level = 100
*******************************************

*******************************************
[PUSH]: Level = 101
*******************************************

*******************************************
[PUSH]: Level = 102
*******************************************

*******************************************
[PUSH]: Level = 103
*******************************************

*******************************************
[PUSH]: Level = 104
*******************************************

*******************************************
[PUSH]: Level = 105
*******************************************

*******************************************
[PUSH]: Level = 106
*******************************************

*******************************************
[PUSH]: Level = 107
*******************************************

*******************************************
[PUSH]: Level = 108
*******************************************

*******************************************
[PUSH]: Level = 109
*******************************************

*******************************************
[PUSH]: Level = 110
*******************************************

*******************************************
[PUSH]: Level = 111
*******************************************

*******************************************
[PUSH]: Level = 112
*******************************************

*******************************************
[PUSH]: Level = 113
*******************************************

*******************************************
[PUSH]: Level = 114
*******************************************

*******************************************
[PUSH]: Level = 115
*******************************************

*******************************************
[PUSH]: Level = 116
*******************************************

*******************************************
[PUSH]: Level = 117
*******************************************

*******************************************
[PUSH]: Level = 118
*******************************************

*******************************************
[PUSH]: Level = 119
*******************************************

*******************************************
[PUSH]: Level = 120
*******************************************

*******************************************
[PUSH]: Level = 121
*******************************************

*******************************************
[PUSH]: Level = 122
*******************************************

*******************************************
[PUSH]: Level = 123
*******************************************

*******************************************
[PUSH]: Level = 124
*******************************************

*******************************************
[PUSH]: Level = 125
*******************************************

*******************************************
[PUSH]: Level = 126
*******************************************

*******************************************
[PUSH]: Level = 127
*******************************************

*******************************************
[PUSH]: Level = 128
*******************************************

*******************************************
[PUSH]: Level = 129
*******************************************

*******************************************
[PUSH]: Level = 130
*******************************************

*******************************************
[PUSH]: Level = 131
*******************************************

*******************************************
[PUSH]: Level = 132
*******************************************

*******************************************
[PUSH]: Level = 133
*******************************************

*******************************************
[PUSH]: Level = 134
*******************************************

*******************************************
[PUSH]: Level = 135
*******************************************

*******************************************
[PUSH]: Level = 136
*******************************************

*******************************************
[PUSH]: Level = 137
*******************************************

*******************************************
[PUSH]: Level = 138
*******************************************

*******************************************
[PUSH]: Level = 139
*******************************************

*******************************************
[PUSH]: Level = 140
*******************************************

*******************************************
[PUSH]: Level = 141
*******************************************

*******************************************
[PUSH]: Level = 142
*******************************************

*******************************************
[PUSH]: Level = 143
*******************************************

*******************************************
[PUSH]: Level = 144
*******************************************

*******************************************
[PUSH]: Level = 145
*******************************************


===============================================
** cb_new_eq():    "113" = _t_val__t_str0_4_0
===============================================


===============================================
** cb_new_eq():    "aaa" = _t_str0
===============================================
>> New_eq Check: PASS

>> Length added for: (= _t_str0 aaa) @ 3289

>> [simplifyConcatStr 1 @ 979] (Concat _t_str0 cabc)

---------------------
Axiom Add(@999, Level 145):
(=> (= _t_str0 aaa) (= (Concat _t_str0 cabc) aaacabc))
---------------------

>> [simplifyConcatStr 2 @ 1014] (Concat (Star y (+ (- 1) m)) _t_str0)



===============================================
** cb_new_eq():    "aaacabc" = (Concat _t_str0 cabc)
===============================================
>> New_eq Check: PASS

>> Length added for: (= (Concat _t_str0 cabc) aaacabc) @ 3289

** solve_concat_eq_str: (Concat _t_str0 cabc) = "aaacabc"



vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
                cb_final_check @ Level [145] 
=============================================================

******************************************
       Dependence Analysis
------------------------------------------
(0) alias: variables

(1) var = constStr:
  y = "aaacabc"
  _t_str0 = "aaa"

(2) var = concat:
  x = { (Concat z cabc), }
  y = { (Concat _t_str0 cabc), }
  z = { (Concat (Star y (+ (- 1) m)) _t_str0), }

(3) concat = constStr:
  (Concat _t_str0 cabc) = "aaacabc"

(4) eq concats:


-- Dependence Map -----------------
x	-->	z(2), 
y	-->	_t_str0(2), "aaacabc"(1), 
z	-->	y(2), _t_str0(2), 
_t_str0	-->	"aaa"(1), "aaacabc"(3), 
-----------------------------------

-- L/R Most Var in eq concat ------
-----------------------------------

-- L/R constraints ----------------
-----------------------------------

* Free Variables:
----------------------------------

----------------------------------

###########################################################


*****************************
SAT
-----------------------------
_t_len__t_str0_2 -> 4
y -> aaacabc
_t_val__t_str0_4_0 -> 113
_t_len__t_str0_3 -> String!val!5
m -> 1
_t_len__t_str0_1 -> more
z -> String!val!4
_t_str0 -> aaa
x -> String!val!0
*****************************

** Reset():

** Delete()
